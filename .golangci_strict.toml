version = '2'

[run]
build-tags = [
  'sudo',
  'netnstest',
  'manual'
]
tests = true

[linters]
disable = ['errcheck']
enable = [
  'asasalint',
  'bodyclose',
  'cyclop',
  'errname',
  'errorlint',
  'funlen',
  'gosec',
  'importas',
  'nolintlint',
  'revive',
  'testifylint',
  'unconvert'
]

[linters.settings]
[linters.settings.gosec]
excludes = [
  'G306',
  'G601'
]

[linters.settings.govet]
disable = [
  'fieldalignment',
  'shadow',
  'unusedwrite'
]
enable-all = true

[linters.settings.govet.settings]
[linters.settings.govet.settings.printf]
funcs = ['(*go.uber.org/zap.SugaredLogger).DPanicf', '(*go.uber.org/zap.SugaredLogger).Debugf', '(*go.uber.org/zap.SugaredLogger).Infof', '(*go.uber.org/zap.SugaredLogger).Warnf', '(*go.uber.org/zap.SugaredLogger).Errorf', '(*go.uber.org/zap.SugaredLogger).Fatalf', '(*go.uber.org/zap.SugaredLogger).Panicf']

[linters.settings.staticcheck]
checks = [
  'all',
  '-QF*',
  '-ST1000',
  '-ST1003',
  '-ST1023',
  'SA9003',
  'ST1016'
]

[linters.exclusions]
generated = 'lax'
presets = [
  'comments',
  'common-false-positives',
  'legacy',
  'std-error-handling'
]
paths = [
  '.*goaviatrix/client_mock\.go',
  'third_party$',
  'builtin$',
  'examples$'
]

[[linters.exclusions.rules]]
linters = [
  'funlen'
]
source = '^func Test'

[[linters.exclusions.rules]]
linters = [
  'testifylint'
]
text = 'require-error: for error assertions use require'

[issues]
fix = false

[formatters]
enable = [
  'gofumpt',
  'goimports'
]

[formatters.settings]
[formatters.settings.goimports]
local-prefixes = [
  'aviatrix.com'
]

[formatters.exclusions]
generated = 'lax'
paths = [
  '.*goaviatrix/client_mock\.go',
  'third_party$',
  'builtin$',
  'examples$'
]

==> Checking that code complies with gofmt requirements...
TF_ACC=1 go test $(go list ./... |grep -v 'vendor') -v  -timeout 300m
?   	github.com/terraform-providers/terraform-provider-aviatrix	[no test files]
=== RUN   TestAccDataSourceAviatrixAccount_basic
--- SKIP: TestAccDataSourceAviatrixAccount_basic (0.00s)
    data_source_aviatrix_account_test.go:19: Skipping Data Source Account test as SKIP_DATA_ACCOUNT is set
=== RUN   TestAccDataSourceAviatrixCallerIdentity_basic
--- SKIP: TestAccDataSourceAviatrixCallerIdentity_basic (0.00s)
    data_source_aviatrix_caller_identity_test.go:22: Skipping Data Source Caller Identity test as SKIP_DATA_CALLER_IDENTITY is set
=== RUN   TestAccDataSourceAviatrixFireNet_basic
--- SKIP: TestAccDataSourceAviatrixFireNet_basic (0.00s)
    data_source_aviatrix_firenet_test.go:19: Skipping Data Source FireNet tests as SKIP_DATA_FIRENET is set
=== RUN   TestAccDataSourceAviatrixFireNetVendorIntegration_basic
--- SKIP: TestAccDataSourceAviatrixFireNetVendorIntegration_basic (0.00s)
    data_source_aviatrix_firenet_vendor_integration_test.go:19: Skipping Data Source FireNet Vendor Integration test as SKIP_DATA_FIRENET_VENDOR_INTEGRATION is set
=== RUN   TestAccDataSourceAviatrixGateway_basic
--- SKIP: TestAccDataSourceAviatrixGateway_basic (0.00s)
    data_source_aviatrix_gateway_test.go:19: Skipping Data Source Gateway test as SKIP_DATA_GATEWAY is set
=== RUN   TestAccDataSourceAviatrixSpokeGateway_basic
--- SKIP: TestAccDataSourceAviatrixSpokeGateway_basic (0.00s)
    data_source_aviatrix_spoke_gateway_test.go:19: Skipping Data Source Spoke Gateway tests as SKIP_DATA_SPOKE_GATEWAY is set
=== RUN   TestAccDataSourceAviatrixTransitGateway_basic
--- SKIP: TestAccDataSourceAviatrixTransitGateway_basic (0.00s)
    data_source_aviatrix_transit_gateway_test.go:19: Skipping Data Source Transit Gateway tests as SKIP_DATA_TRANSIT_GATEWAY is set
=== RUN   TestProvider
--- PASS: TestProvider (0.00s)
=== RUN   TestProvider_impl
--- PASS: TestProvider_impl (0.00s)
=== RUN   TestAccAviatrixAccount_basic
--- SKIP: TestAccAviatrixAccount_basic (0.00s)
    resource_aviatrix_account_test.go:89: Skipping Access Account test as SKIP_ACCOUNT is set
=== RUN   TestAccAviatrixAccountUser_basic
--- SKIP: TestAccAviatrixAccountUser_basic (0.00s)
    resource_aviatrix_account_user_test.go:23: Skipping Account User test as SKIP_ACCOUNT_USER is set
=== RUN   TestAccAviatrixARMPeer_basic
--- SKIP: TestAccAviatrixARMPeer_basic (0.00s)
    resource_aviatrix_arm_peer_test.go:46: Skipping aviatrix ARM peering test as SKIP_ARM_PEER is set
=== RUN   TestAccAviatrixAWSPeer_basic
--- SKIP: TestAccAviatrixAWSPeer_basic (0.00s)
    resource_aviatrix_aws_peer_test.go:46: Skipping aviatrix AWS peering test as SKIP_AWS_PEER is set
=== RUN   TestAccAviatrixAwsTgwDirectConnect_basic
--- SKIP: TestAccAviatrixAwsTgwDirectConnect_basic (0.00s)
    resource_aviatrix_aws_tgw_directconnect_test.go:22: Skipping AWS TGW DIRECTCONNECT test as SKIP_AWS_TGW_DIRECTCONNECT is set
=== RUN   TestAccAviatrixAWSTgw_basic
--- SKIP: TestAccAviatrixAWSTgw_basic (0.00s)
    resource_aviatrix_aws_tgw_test.go:23: Skipping AWS TGW test as SKIP_AWS_TGW is set
=== RUN   TestAccAviatrixAwsTgwVpcAttachment_basic
--- SKIP: TestAccAviatrixAwsTgwVpcAttachment_basic (0.00s)
    resource_aviatrix_aws_tgw_vpc_attachment_test.go:22: Skipping AWS TGW VPC ATTACH test as SKIP_AWS_TGW_VPC_ATTACHMENT is set
=== RUN   TestAccAviatrixAwsTgwVpnConn_basic
--- SKIP: TestAccAviatrixAwsTgwVpnConn_basic (0.00s)
    resource_aviatrix_aws_tgw_vpn_conn_test.go:22: Skipping AWS TGW VPN CONN test as SKIP_AWS_TGW_VPN_CONN is set
=== RUN   TestAccAviatrixControllerConfig_basic
--- SKIP: TestAccAviatrixControllerConfig_basic (0.00s)
    resource_aviatrix_controller_config_test.go:21: Skipping Controller Config test as SKIP_CONTROLLER_CONFIG is set
=== RUN   TestAccAviatrixFireNet_basic
--- SKIP: TestAccAviatrixFireNet_basic (0.00s)
    resource_aviatrix_firenet_test.go:22: Skipping FireNet test as SKIP_FIRENET is set
=== RUN   TestAccAviatrixFirewallInstance_basic
--- SKIP: TestAccAviatrixFirewallInstance_basic (0.00s)
    resource_aviatrix_firewall_instance_test.go:22: Skipping Firewall Instance test as SKIP_FIREWALL_INSTANCE is set
=== RUN   TestAccAviatrixFirewallTag_basic
--- SKIP: TestAccAviatrixFirewallTag_basic (0.00s)
    resource_aviatrix_firewall_tag_test.go:22: Skipping firewall tag test as SKIP_FIREWALL_TAG is set
=== RUN   TestAccAviatrixFirewall_basic
--- SKIP: TestAccAviatrixFirewall_basic (0.00s)
    resource_aviatrix_firewall_test.go:22: Skipping Firewall test as SKIP_FIREWALL is set
=== RUN   TestAccAviatrixFQDN_basic
--- SKIP: TestAccAviatrixFQDN_basic (0.00s)
    resource_aviatrix_fqdn_test.go:21: Skipping FQDN test as SKIP_FQDN is set
=== RUN   TestAccAviatrixGatewayDNat_basic
2020/01/28 15:27:17 [DEBUG] Test: Executing step 0
2020/01/28 15:27:17 [TRACE] ModuleInstaller: installing child modules for /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642 into /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/.modules
2020/01/28 15:27:17 [TRACE] modsdir: writing modules manifest to /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/.modules/modules.json
2020/01/28 15:27:17 [TRACE] terraform.NewContext: starting
2020/01/28 15:27:17 [TRACE] terraform.NewContext: resolving provider version selections
2020/01/28 15:27:17 [TRACE] terraform.NewContext: loading provider schemas
2020/01/28 15:27:17 [TRACE] LoadSchemas: retrieving schema for provider type "aviatrix"
2020/01/28 15:27:17 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:27:17 [TRACE] GRPCProvider: Close
2020/01/28 15:27:17 [DEBUG] provider has no plugin.Client
2020/01/28 15:27:17 [TRACE] terraform.NewContext: complete
2020/01/28 15:27:17 [INFO] terraform: building graph: GraphTypeValidate
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:27:17 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:27:17 [TRACE] StateTransformer: state is empty, so nothing to do
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:27:17 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_account.test_acc_aws" (*terraform.NodeValidatableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:2,1-43
2020/01/28 15:27:17 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway.test_gw_aws" (*terraform.NodeValidatableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:10,1-42
2020/01/28 15:27:17 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway_dnat.test" (*terraform.NodeValidatableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:19,1-40
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
------
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:27:17 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_account.test_acc_aws
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:27:17 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:17 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:17 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:17 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:27:17 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodeValidatableResource) needs provider.aviatrix
2020/01/28 15:27:17 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:27:17 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodeValidatableResource) needs provider.aviatrix
2020/01/28 15:27:17 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:27:17 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodeValidatableResource) needs provider.aviatrix
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:27:17 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:27:17 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:27:17 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:27:17 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:27:17 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws]
2020/01/28 15:27:17 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws]
2020/01/28 15:27:17 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:27:17 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
  aviatrix_account.test_acc_aws - *terraform.NodeValidatableResource
aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeValidatableResource
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test - *terraform.NodeValidatableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:27:17 [DEBUG] Starting graph walk: walkValidate
2020/01/28 15:27:17 [TRACE] dag/walk: updating graph
2020/01/28 15:27:17 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:17 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:27:17 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:27:17 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:17 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:27:17 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:27:17 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:27:17 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:27:17 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:17 [TRACE] dag/walk: added edge: "root" waiting on "provider.aviatrix (close)"
2020/01/28 15:27:17 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "provider.aviatrix"
2020/01/28 15:27:17 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:27:17 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_account.test_acc_aws"
2020/01/28 15:27:17 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:17 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:27:17 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/01/28 15:27:17 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:27:17 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/01/28 15:27:17 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:27:17 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:27:17 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:27:17 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:27:17 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:27:17 [TRACE] [walkValidate] Entering eval tree: provider.aviatrix
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:27:17 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:27:17 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/01/28 15:27:17 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:27:17 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:27:17 [TRACE] GRPCProvider: PrepareProviderConfig
2020/01/28 15:27:17 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:17 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:17 [TRACE] [walkValidate] Exiting eval tree: provider.aviatrix
2020/01/28 15:27:17 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:27:17 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodeValidatableResource)
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:27:17 [TRACE] [walkValidate] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/01/28 15:27:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:27:17 [TRACE] [walkValidate] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:27:17 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodeValidatableResource)
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:27:17 [TRACE] [walkValidate] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/01/28 15:27:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:27:17 [TRACE] [walkValidate] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:27:17 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodeValidatableResource)
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:27:17 [TRACE] [walkValidate] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/01/28 15:27:17 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:27:17 [TRACE] [walkValidate] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:27:17 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:27:17 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:27:17 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:27:17 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:17 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:27:17 [TRACE] [walkValidate] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:27:17 [TRACE] GRPCProvider: Close
2020/01/28 15:27:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/01/28 15:27:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/01/28 15:27:17 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:27:17 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/01/28 15:27:17 [DEBUG] provider has no plugin.Client
2020/01/28 15:27:17 [TRACE] [walkValidate] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:27:17 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:27:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/01/28 15:27:17 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:27:17 [TRACE] dag/walk: visiting "root"
2020/01/28 15:27:17 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:27:17 [TRACE] vertex "root": visit complete
2020/01/28 15:27:17 [INFO] terraform: building graph: GraphTypeRefresh
2020/01/28 15:27:17 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:27:17 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:27:17 [TRACE] StateTransformer: state is empty, so nothing to do
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer (no changes)
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
root - terraform.graphNodeRoot
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/01/28 15:27:17 [DEBUG] Starting graph walk: walkRefresh
2020/01/28 15:27:17 [TRACE] dag/walk: updating graph
2020/01/28 15:27:17 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:27:17 [TRACE] dag/walk: visiting "root"
2020/01/28 15:27:17 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:27:17 [TRACE] vertex "root": visit complete
2020/01/28 15:27:17 [DEBUG] New state was assigned lineage "b681e8bb-6028-4669-81ec-3dd6bcc2058e"
2020/01/28 15:27:17 [INFO] terraform: building graph: GraphTypePlan
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:27:17 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:27:17 [TRACE] StateTransformer: state is empty, so nothing to do
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:27:17 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:19,1-40
2020/01/28 15:27:17 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:2,1-43
2020/01/28 15:27:17 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:10,1-42
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
------
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:27:17 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_gateway_dnat.test
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:27:17 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:17 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:17 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:17 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:27:17 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:27:17 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:27:17 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:27:17 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:27:17 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:27:17 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:27:17 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:27:17 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:27:17 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:27:17 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:27:17 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:27:17 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:27:17 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws]
2020/01/28 15:27:17 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:27:18 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws]
2020/01/28 15:27:18 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:27:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:18 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/01/28 15:27:18 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:27:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:27:18 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/01/28 15:27:18 [TRACE] ForcedCBDTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:27:18 [TRACE] ForcedCBDTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:27:18 [TRACE] ForcedCBDTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:27:18 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/01/28 15:27:18 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:27:18 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:18 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/01/28 15:27:18 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/01/28 15:27:18 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:27:18 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:27:18 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:27:18 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:27:18 [DEBUG] Starting graph walk: walkPlan
2020/01/28 15:27:18 [TRACE] dag/walk: updating graph
2020/01/28 15:27:18 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:27:18 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:27:18 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:18 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:27:18 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:18 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:27:18 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:27:18 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "provider.aviatrix"
2020/01/28 15:27:18 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:27:18 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:27:18 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:18 [TRACE] dag/walk: added edge: "root" waiting on "provider.aviatrix (close)"
2020/01/28 15:27:18 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_account.test_acc_aws"
2020/01/28 15:27:18 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:27:18 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/01/28 15:27:18 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:27:18 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/01/28 15:27:18 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:27:18 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:27:18 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:27:18 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:27:18 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:27:18 [TRACE] [walkPlan] Entering eval tree: provider.aviatrix
2020/01/28 15:27:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:18 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:27:18 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:27:18 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:18 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:27:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:27:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:18 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/01/28 15:27:18 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:27:18 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:27:18 [TRACE] GRPCProvider: Configure
2020/01/28 15:27:18 [INFO] Parsed Aviatrix login: "admin"
2020/01/28 15:27:18 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:27:18 [TRACE] POST https://54.215.219.221/v1/api Body: action=login&password=Aviatrix123%23&username=admin
2020/01/28 15:27:18 [TRACE] CID is 'Kus4XSyxLEqIZNcrtJID'.
2020/01/28 15:27:18 [INFO] Aviatrix Client configured for use
2020/01/28 15:27:18 [TRACE] GET https://54.215.219.221/v1/api?CID=Kus4XSyxLEqIZNcrtJID&action=list_version_info
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: provider.aviatrix
2020/01/28 15:27:19 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:27:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": expanding dynamic subgraph
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:27:19 [DEBUG] Resource instance state not found for node "aviatrix_account.test_acc_aws", instance aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": entering dynamic subgraph
2020/01/28 15:27:19 [TRACE] dag/walk: updating graph
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:27:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:27:19 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] EvalReadState: no state present for aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:27:19 [TRACE] Re-validating config for "aviatrix_account.test_acc_aws"
2020/01/28 15:27:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:27:19 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:27:19 [TRACE] EvalWriteState: writing current state object for aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:27:19 [TRACE] EvalWriteDiff: recorded Create change for aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": dynamic subgraph completed successfully
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:27:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": expanding dynamic subgraph
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:27:19 [DEBUG] Resource instance state not found for node "aviatrix_gateway.test_gw_aws", instance aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: []
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": entering dynamic subgraph
2020/01/28 15:27:19 [TRACE] dag/walk: updating graph
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:27:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:27:19 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] EvalReadState: no state present for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:27:19 [TRACE] GetResourceInstance: aviatrix_account.test_acc_aws is a single instance
2020/01/28 15:27:19 [TRACE] Re-validating config for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:27:19 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:27:19 [WARN] Provider "aviatrix" produced an invalid plan for aviatrix_gateway.test_gw_aws, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .enable_vpc_dns_server: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .single_ip_snat: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .allocate_new_eip: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .enable_ldap: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .enable_vpn_nat: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .split_tunnel: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .insane_mode: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .single_az_ha: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .enable_designated_gateway: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpn_access: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .enable_elb: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .saml_enabled: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .enable_encrypt_volume: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:27:19 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:27:19 [TRACE] EvalWriteDiff: recorded Create change for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": dynamic subgraph completed successfully
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:27:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": expanding dynamic subgraph
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_gateway_dnat.test - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:27:19 [DEBUG] Resource instance state not found for node "aviatrix_gateway_dnat.test", instance aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: []
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": entering dynamic subgraph
2020/01/28 15:27:19 [TRACE] dag/walk: updating graph
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:27:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:27:19 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] EvalReadState: no state present for aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:27:19 [TRACE] GetResourceInstance: aviatrix_gateway.test_gw_aws is a single instance
2020/01/28 15:27:19 [TRACE] Re-validating config for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:27:19 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:27:19 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:27:19 [TRACE] EvalWriteDiff: recorded Create change for aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": dynamic subgraph completed successfully
2020/01/28 15:27:19 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/01/28 15:27:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/01/28 15:27:19 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:27:19 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/01/28 15:27:19 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:27:19 [TRACE] [walkPlan] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:27:19 [TRACE] GRPCProvider: Close
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:27:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/01/28 15:27:19 [DEBUG] provider has no plugin.Client
2020/01/28 15:27:19 [TRACE] [walkPlan] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:27:19 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "root"
2020/01/28 15:27:19 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:27:19 [TRACE] vertex "root": visit complete
2020/01/28 15:27:19 [WARN] Test: Step plan: DIFF:

CREATE: aviatrix_account.test_acc_aws
  account_name:       "" => "tf-acc-aws-q6mvb"
  aws_access_key:     "" => "AKIAIQP4GPY45NA4NIAA"
  aws_account_number: "" => "830104897336"
  aws_iam:            "" => "false"
  aws_secret_key:     "" => "/4dSGsN5TYshwwnmxQr28aBDi3QO7jUVBWMYN8E5"
  cloud_type:         "" => "1"
  id:                 "" => "<computed>"
CREATE: aviatrix_gateway.test_gw_aws
  account_name:                "" => "tf-acc-aws-q6mvb"
  allocate_new_eip:            "" => "true"
  backup_public_ip:            "" => "<computed>"
  cloud_instance_id:           "" => "<computed>"
  cloud_type:                  "" => "1"
  cloudn_bkup_gateway_inst_id: "" => "<computed>"
  eip:                         "" => "<computed>"
  elb_dns_name:                "" => "<computed>"
  elb_name:                    "" => "<computed>"
  enable_designated_gateway:   "" => "false"
  enable_elb:                  "" => "false"
  enable_encrypt_volume:       "" => "false"
  enable_ldap:                 "" => "false"
  enable_vpc_dns_server:       "" => "false"
  enable_vpn_nat:              "" => "true"
  gw_name:                     "" => "tfg-aws-q6mvb"
  gw_size:                     "" => "t2.micro"
  id:                          "" => "<computed>"
  insane_mode:                 "" => "false"
  peering_ha_eip:              "" => "<computed>"
  public_dns_server:           "" => "<computed>"
  public_ip:                   "" => "<computed>"
  saml_enabled:                "" => "false"
  security_group_id:           "" => "<computed>"
  single_az_ha:                "" => "false"
  single_ip_snat:              "" => "false"
  split_tunnel:                "" => "true"
  subnet:                      "" => "172.31.16.0/20"
  vpc_id:                      "" => "vpc-727c5215"
  vpc_reg:                     "" => "us-west-1"
  vpn_access:                  "" => "false"
CREATE: aviatrix_gateway_dnat.test
  dnat_policy.#:             "" => "1"
  dnat_policy.0.connection:  "" => "None"
  dnat_policy.0.dnat_ips:    "" => "175.32.12.12"
  dnat_policy.0.dnat_port:   "" => "12"
  dnat_policy.0.dst_cidr:    "" => "14.0.0.0/16"
  dnat_policy.0.dst_port:    "" => "222"
  dnat_policy.0.exclude_rtb: "" => ""
  dnat_policy.0.interface:   "" => "eth0"
  dnat_policy.0.mark:        "" => "22"
  dnat_policy.0.protocol:    "" => "tcp"
  dnat_policy.0.src_cidr:    "" => "13.0.0.0/16"
  dnat_policy.0.src_port:    "" => "22"
  gw_name:                   "" => "tfg-aws-q6mvb"
  id:                        "" => "<computed>"



STATE:

<no state>
2020/01/28 15:27:19 [INFO] terraform: building graph: GraphTypeApply
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:27:19 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/01/28 15:27:19 [TRACE] DiffTransformer starting
2020/01/28 15:27:19 [TRACE] DiffTransformer: found Create change for aviatrix_account.test_acc_aws 
2020/01/28 15:27:19 [TRACE] DiffTransformer: aviatrix_account.test_acc_aws will be represented by aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] DiffTransformer: found Create change for aviatrix_gateway.test_gw_aws 
2020/01/28 15:27:19 [TRACE] DiffTransformer: aviatrix_gateway.test_gw_aws will be represented by aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] DiffTransformer: found Create change for aviatrix_gateway_dnat.test 
2020/01/28 15:27:19 [TRACE] DiffTransformer: aviatrix_gateway_dnat.test will be represented by aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] DiffTransformer complete
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:27:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway.test_gw_aws" (*terraform.NodeApplyableResourceInstance) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:10,1-42
2020/01/28 15:27:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway_dnat.test" (*terraform.NodeApplyableResourceInstance) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:19,1-40
2020/01/28 15:27:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway_dnat.test (prepare state)" (*terraform.NodeApplyableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:19,1-40
2020/01/28 15:27:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_account.test_acc_aws (prepare state)" (*terraform.NodeApplyableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:2,1-43
2020/01/28 15:27:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway.test_gw_aws (prepare state)" (*terraform.NodeApplyableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:10,1-42
2020/01/28 15:27:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_account.test_acc_aws" (*terraform.NodeApplyableResourceInstance) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:2,1-43
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:27:19 [DEBUG] Resource state not found for node "aviatrix_account.test_acc_aws", instance aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [DEBUG] Resource state not found for node "aviatrix_gateway.test_gw_aws", instance aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [DEBUG] Resource state not found for node "aviatrix_gateway_dnat.test", instance aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
------
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:27:19 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_account.test_acc_aws (prepare state)
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:27:19 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test (prepare state) is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:19 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws (prepare state) is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:19 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws (prepare state) is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:19 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:19 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:19 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:27:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test (prepare state)
2020/01/28 15:27:19 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test (prepare state)" (*terraform.NodeApplyableResource) needs provider.aviatrix
2020/01/28 15:27:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws (prepare state)
2020/01/28 15:27:19 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws (prepare state)" (*terraform.NodeApplyableResource) needs provider.aviatrix
2020/01/28 15:27:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws (prepare state)
2020/01/28 15:27:19 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws (prepare state)" (*terraform.NodeApplyableResource) needs provider.aviatrix
2020/01/28 15:27:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodeApplyableResourceInstance) needs provider.aviatrix
2020/01/28 15:27:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodeApplyableResourceInstance) needs provider.aviatrix
2020/01/28 15:27:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodeApplyableResourceInstance) needs provider.aviatrix
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:27:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:27:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:27:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:27:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:27:19 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:27:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test (prepare state)
2020/01/28 15:27:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws (prepare state)
2020/01/28 15:27:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws (prepare state)
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test (prepare state)" references: []
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws (prepare state)" references: []
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws (prepare state)" references: []
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws (prepare state) aviatrix_account.test_acc_aws aviatrix_account.test_acc_aws]
2020/01/28 15:27:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws (prepare state) aviatrix_gateway.test_gw_aws aviatrix_gateway.test_gw_aws]
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:27:19 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:27:19 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_account.test_acc_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway.test_gw_aws (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeApplyableResourceInstance
  aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
aviatrix_gateway_dnat.test (prepare state) - *terraform.NodeApplyableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test - *terraform.NodeApplyableResourceInstance
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:27:19 [DEBUG] Starting graph walk: walkApply
2020/01/28 15:27:19 [TRACE] dag/walk: updating graph
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test (prepare state)"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws (prepare state)"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws (prepare state)"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:27:19 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "aviatrix_account.test_acc_aws (prepare state)"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_gateway.test_gw_aws (prepare state)"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_account.test_acc_aws"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws (prepare state)" waiting on "provider.aviatrix"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test (prepare state)" waiting on "provider.aviatrix"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws (prepare state)" waiting on "provider.aviatrix"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway_dnat.test (prepare state)"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "root" waiting on "provider.aviatrix (close)"
2020/01/28 15:27:19 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test (prepare state)", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws (prepare state)", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws (prepare state)", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/01/28 15:27:19 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:27:19 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:27:19 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:27:19 [TRACE] [walkApply] Entering eval tree: provider.aviatrix
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:27:19 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:27:19 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:19 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:19 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/01/28 15:27:19 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:27:19 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:27:19 [TRACE] GRPCProvider: Configure
2020/01/28 15:27:19 [INFO] Parsed Aviatrix login: "admin"
2020/01/28 15:27:19 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:27:19 [TRACE] POST https://54.215.219.221/v1/api Body: action=login&password=Aviatrix123%23&username=admin
2020/01/28 15:27:19 [TRACE] CID is 'X9IaC1YC8ebH1xWSGNey'.
2020/01/28 15:27:19 [INFO] Aviatrix Client configured for use
2020/01/28 15:27:19 [TRACE] GET https://54.215.219.221/v1/api?CID=X9IaC1YC8ebH1xWSGNey&action=list_version_info
2020/01/28 15:27:20 [TRACE] [walkApply] Exiting eval tree: provider.aviatrix
2020/01/28 15:27:20 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:27:20 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws (prepare state)"
2020/01/28 15:27:20 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test (prepare state)"
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_gateway.test_gw_aws (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_gateway_dnat.test (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_gateway.test_gw_aws (prepare state)": evaluating
2020/01/28 15:27:20 [TRACE] [walkApply] Entering eval tree: aviatrix_gateway.test_gw_aws (prepare state)
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:27:20 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws (prepare state)"
2020/01/28 15:27:20 [TRACE] [walkApply] Exiting eval tree: aviatrix_gateway.test_gw_aws (prepare state)
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_account.test_acc_aws (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_gateway.test_gw_aws (prepare state)": visit complete
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_gateway_dnat.test (prepare state)": evaluating
2020/01/28 15:27:20 [TRACE] [walkApply] Entering eval tree: aviatrix_gateway_dnat.test (prepare state)
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_account.test_acc_aws (prepare state)": evaluating
2020/01/28 15:27:20 [TRACE] [walkApply] Exiting eval tree: aviatrix_gateway_dnat.test (prepare state)
2020/01/28 15:27:20 [TRACE] [walkApply] Entering eval tree: aviatrix_account.test_acc_aws (prepare state)
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_gateway_dnat.test (prepare state)": visit complete
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:27:20 [TRACE] [walkApply] Exiting eval tree: aviatrix_account.test_acc_aws (prepare state)
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_account.test_acc_aws (prepare state)": visit complete
2020/01/28 15:27:20 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodeApplyableResourceInstance)
2020/01/28 15:27:20 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:27:20 [TRACE] [walkApply] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:27:20 [TRACE] EvalReadDiff: Read Create change from plan for aviatrix_account.test_acc_aws
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:27:20 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:27:20 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:27:20 [TRACE] EvalReadState: no state present for aviatrix_account.test_acc_aws
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:27:20 [TRACE] EvalReadDiff: Read Create change from plan for aviatrix_account.test_acc_aws
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:27:20 [TRACE] Re-validating config for "aviatrix_account.test_acc_aws"
2020/01/28 15:27:20 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:27:20 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/01/28 15:27:20 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:27:20 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:27:20 [TRACE] EvalReadState: no state present for aviatrix_account.test_acc_aws
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:27:20 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/01/28 15:27:20 [TRACE] <root>: eval: *terraform.EvalApply
2020/01/28 15:27:20 [DEBUG] aviatrix_account.test_acc_aws: applying the planned Create change
2020/01/28 15:27:20 [TRACE] GRPCProvider: ApplyResourceChange
2020/01/28 15:27:20 [INFO] Creating Aviatrix account: &goaviatrix.Account{CID:"", Action:"", AccountName:"tf-acc-aws-q6mvb", CloudType:1, AwsAccountNumber:"830104897336", AwsIam:"false", AwsAccessKey:"AKIAIQP4GPY45NA4NIAA", AwsSecretKey:"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", AwsRoleApp:"", AwsRoleEc2:"", AzureSubscriptionId:"", ArmSubscriptionId:"", ArmApplicationEndpoint:"", ArmApplicationClientId:"", ArmApplicationClientSecret:"", AwsgovAccountNumber:"", AwsgovAccessKey:"", AwsgovSecretKey:"", AwsgovCloudtrailBucket:"", AzurechinaSubscriptionId:"", AwschinaAccountNumber:"", AwschinaAccessKey:"", AwschinaSecretKey:"", ArmChinaSubscriptionId:"", ArmChinaApplicationEndpoint:"", ArmChinaApplicationClientId:"", ArmChinaApplicationClientSecret:"", ProjectCredentialsFilename:"", ProjectCredentialsContents:"", GcloudProjectCredentialsFilepathLocal:"", GcloudProjectCredentialsFilepathController:"", GcloudProjectName:"", OciTenancyID:"", OciUserID:"", OciCompartmentID:"", OciApiPrivateKeyFilePath:""}
2020/01/28 15:27:20 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:27:20 [TRACE] POST https://54.215.219.221/v1/api Body: CID=X9IaC1YC8ebH1xWSGNey&account_name=tf-acc-aws-q6mvb&action=setup_account_profile&aws_access_key=AKIAIQP4GPY45NA4NIAA&aws_account_number=830104897336&aws_iam=false&aws_secret_key=%2F4dSGsN5TYshwwnmxQr28aBDi3QO7jUVBWMYN8E5&cloud_type=1&oci_api_key_path=&oci_compartment_id=&oci_tenancy_id=&oci_user_id=
2020/01/28 15:27:24 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:24 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:24 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:24 [INFO] Looking for Aviatrix account: &goaviatrix.Account{CID:"", Action:"", AccountName:"tf-acc-aws-q6mvb", CloudType:0, AwsAccountNumber:"", AwsIam:"", AwsAccessKey:"", AwsSecretKey:"", AwsRoleApp:"", AwsRoleEc2:"", AzureSubscriptionId:"", ArmSubscriptionId:"", ArmApplicationEndpoint:"", ArmApplicationClientId:"", ArmApplicationClientSecret:"", AwsgovAccountNumber:"", AwsgovAccessKey:"", AwsgovSecretKey:"", AwsgovCloudtrailBucket:"", AzurechinaSubscriptionId:"", AwschinaAccountNumber:"", AwschinaAccessKey:"", AwschinaSecretKey:"", ArmChinaSubscriptionId:"", ArmChinaApplicationEndpoint:"", ArmChinaApplicationClientId:"", ArmChinaApplicationClientSecret:"", ProjectCredentialsFilename:"", ProjectCredentialsContents:"", GcloudProjectCredentialsFilepathLocal:"", GcloudProjectCredentialsFilepathController:"", GcloudProjectName:"", OciTenancyID:"", OciUserID:"", OciCompartmentID:"", OciApiPrivateKeyFilePath:""}
2020/01/28 15:27:24 [TRACE] GET https://54.215.219.221/v1/api?CID=X9IaC1YC8ebH1xWSGNey&action=list_accounts
2020/01/28 15:27:24 [INFO] Found Aviatrix Account tf-acc-aws-q6mvb
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:27:24 [TRACE] EvalWriteState: writing current state object for aviatrix_account.test_acc_aws
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:27:24 [TRACE] EvalWriteState: writing current state object for aviatrix_account.test_acc_aws
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/01/28 15:27:24 [TRACE] [walkApply] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:27:24 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:27:24 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:24 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodeApplyableResourceInstance)
2020/01/28 15:27:24 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:27:24 [TRACE] [walkApply] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:27:24 [TRACE] EvalReadDiff: Read Create change from plan for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:27:24 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:27:24 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:24 [TRACE] EvalReadState: no state present for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:27:24 [TRACE] EvalReadDiff: Read Create change from plan for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:27:24 [TRACE] GetResourceInstance: aviatrix_account.test_acc_aws is a single instance
2020/01/28 15:27:24 [TRACE] Re-validating config for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:24 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:27:24 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:27:24 [WARN] Provider "aviatrix" produced an invalid plan for aviatrix_gateway.test_gw_aws, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .enable_vpc_dns_server: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .single_ip_snat: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .allocate_new_eip: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .enable_ldap: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .enable_vpn_nat: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .split_tunnel: planned value cty.True does not match config value cty.NullVal(cty.Bool)
      - .insane_mode: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .single_az_ha: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .enable_designated_gateway: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .enable_elb: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .vpn_access: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .saml_enabled: planned value cty.False does not match config value cty.NullVal(cty.Bool)
      - .enable_encrypt_volume: planned value cty.False does not match config value cty.NullVal(cty.Bool)
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/01/28 15:27:24 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:27:24 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:24 [TRACE] EvalReadState: no state present for aviatrix_gateway.test_gw_aws
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:27:24 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/01/28 15:27:24 [TRACE] <root>: eval: *terraform.EvalApply
2020/01/28 15:27:24 [TRACE] GetResourceInstance: aviatrix_account.test_acc_aws is a single instance
2020/01/28 15:27:24 [DEBUG] aviatrix_gateway.test_gw_aws: applying the planned Create change
2020/01/28 15:27:24 [TRACE] GRPCProvider: ApplyResourceChange
2020/01/28 15:27:24 [INFO] Creating Aviatrix gateway: &goaviatrix.Gateway{AccountName:"tf-acc-aws-q6mvb", Action:"", AdditionalCidrs:"", AuthMethod:"", AllocateNewEip:"on", AllocateNewEipRead:false, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"", ClientCertSharing:"", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"", ConnectedTransit:"", DirectInternet:"", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"", EnableClientCertSharing:"", EnableElb:"no", EnableLdap:"no", EnableLdapRead:false, EnableVpcDnsServer:"", DnsServer:"", PublicDnsServer:"", EnableNat:"no", SingleAZ:"", EnableHybridConnection:false, EnablePbr:"", Expiration:"", GatewayZone:"", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"", GwSize:"", GwSubnetID:"", PeeringHASubnet:"", NewZone:"", InsaneMode:"off", InstState:"", IntraVMRoute:"", IsHagw:"", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"", PbrLogging:"", PbrSubnet:"", PrivateIP:"", PublicIP:"", SamlEnabled:"no", SandboxIP:"", SaveTemplate:"no", SearchDomains:"", SplitTunnel:"yes", SpokeVpc:"", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"", VendorName:"", VpcID:"vpc-727c5215", VpcNet:"172.31.16.0/20", VpcRegion:"us-west-1", VpcSplunkIPPort:"", VpcState:"", VpcType:"", VpnCidr:"", VpnStatus:"no", Zone:"", VpcSize:"t2.micro", DMZEnabled:"", EnableActiveMesh:"", EnableVpnNat:false, EnableDesignatedGateway:"", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string(nil), FilteredSpokeVpcRoutes:[]string(nil), AdvertisedSpokeRoutes:[]string(nil), IncludeCidrList:[]string(nil), ExcludeCidrList:[]string(nil)}
2020/01/28 15:27:24 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:27:24 [TRACE] POST https://54.215.219.221/v1/api Body: AdvertisedSpokeRoutes=&AllocateNewEipRead=&CID=X9IaC1YC8ebH1xWSGNey&ConnectedTransit=&CustomizedSpokeVpcRoutes=&DMZEnabled=&DnatPolicy=&EnableEncryptVolume=&EnableHybridConnection=&EnableLdapRead=&EnableVpcDnsServer=&ExcludeCidrList=&FilteredSpokeVpcRoutes=&IncludeCidrList=&SnatPolicy=&SpokeVpc=&account_name=tf-acc-aws-q6mvb&action=connect_container&allocate_new_eip=on&cloud_type=1&enable_elb=no&enable_ldap=no&enable_nat=no&gw_name=tfg-aws-q6mvb&insane_mode=off&saml_enabled=no&save_template=no&split_tunnel=yes&vpc_id=vpc-727c5215&vpc_net=172.31.16.0%2F20&vpc_reg=us-west-1&vpc_size=t2.micro&vpn_access=no
2020/01/28 15:27:25 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:29 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:29 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:29 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:30 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:34 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:34 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:34 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:35 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:39 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:39 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:39 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:40 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:44 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:44 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:44 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:45 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:49 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:49 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:49 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:50 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:54 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:54 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:54 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:55 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:27:59 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:27:59 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:27:59 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:00 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:04 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:04 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:04 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:05 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:09 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:09 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:09 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:10 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:14 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:14 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:14 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:15 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:19 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:19 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:19 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:20 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:24 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:24 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:24 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:25 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:29 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:29 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:29 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:30 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:34 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:34 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:34 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:35 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:39 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:39 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:39 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:40 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:44 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:44 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:44 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:45 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:49 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:49 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:49 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:50 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:54 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:54 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:54 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:55 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:28:59 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:28:59 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:28:59 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:00 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:04 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:04 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:04 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:05 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:09 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:09 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:09 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:10 [TRACE] dag/walk: vertex "aviatrix_gateway_dnat.test" is waiting for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:14 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:14 [TRACE] dag/walk: vertex "root" is waiting for "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:14 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:14 [TRACE] GET https://54.215.219.221/v1/api?CID=X9IaC1YC8ebH1xWSGNey&action=list_vpcs_summary
2020/01/28 15:29:14 [TRACE] reading gateway tfg-aws-q6mvb: &goaviatrix.Gateway{AccountName:"tf-acc-aws-q6mvb", Action:"", AdditionalCidrs:"", AuthMethod:"None", AllocateNewEip:"", AllocateNewEipRead:true, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"disabled", ClientCertSharing:"disabled", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"i-0b7e4fd366beff513", ConnectedTransit:"no", DirectInternet:"yes", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"disable", EnableClientCertSharing:"", EnableElb:"", EnableLdap:"", EnableLdapRead:false, EnableVpcDnsServer:"Disabled", DnsServer:"", PublicDnsServer:"8.8.8.8", EnableNat:"no", SingleAZ:"no", EnableHybridConnection:false, EnablePbr:"", Expiration:"2021-05-02", GatewayZone:"us-west-1c", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"sg-066cf6437cf8568e9", GwSize:"t2.micro", GwSubnetID:"subnet-214f5646", PeeringHASubnet:"", NewZone:"", InsaneMode:"no", InstState:"", IntraVMRoute:"", IsHagw:"no", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"Lic-1578530546.14", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"no", PbrLogging:"", PbrSubnet:"", PrivateIP:"172.31.25.214", PublicIP:"13.52.175.182", SamlEnabled:"no", SandboxIP:"13.52.175.182", SaveTemplate:"", SearchDomains:"", SplitTunnel:"", SpokeVpc:"no", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"N/A", VendorName:"AWS", VpcID:"vpc-727c5215~~test-vpc", VpcNet:"172.31.16.0/20", VpcRegion:"us-west-1", VpcSplunkIPPort:"", VpcState:"waiting", VpcType:"vpc_legacy", VpnCidr:"", VpnStatus:"disabled", Zone:"", VpcSize:"", DMZEnabled:"", EnableActiveMesh:"no", EnableVpnNat:false, EnableDesignatedGateway:"No", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string{}, FilteredSpokeVpcRoutes:[]string{}, AdvertisedSpokeRoutes:[]string{}, IncludeCidrList:[]string{}, ExcludeCidrList:[]string{}}
2020/01/28 15:29:14 [TRACE] GET https://54.215.219.221/v1/api?CID=X9IaC1YC8ebH1xWSGNey&action=list_vpc_by_name&vpc_name=tfg-aws-q6mvb
2020/01/28 15:29:14 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:14 [TRACE] POST https://54.215.219.221/v1/api Body: CID=X9IaC1YC8ebH1xWSGNey&action=list_resource_tags&cloud_type=1&resource_name=tfg-aws-q6mvb&resource_type=gw
2020/01/28 15:29:15 [WARN] Provider "aviatrix" produced an unexpected new value for aviatrix_gateway.test_gw_aws, but we are tolerating it because it is using the legacy plugin SDK.
    The following problems may be the cause of any confusing errors from downstream operations:
      - .duo_api_hostname: was null, but now cty.StringVal("")
      - .search_domains: was null, but now cty.StringVal("")
      - .duo_integration_key: was null, but now cty.StringVal("")
      - .duo_push_mode: was null, but now cty.StringVal("")
      - .okta_username_suffix: was null, but now cty.StringVal("")
      - .ldap_server: was null, but now cty.StringVal("")
      - .name_servers: was null, but now cty.StringVal("")
      - .okta_url: was null, but now cty.StringVal("")
      - .additional_cidrs: was null, but now cty.StringVal("")
      - .additional_cidrs_designated_gateway: was null, but now cty.StringVal("")
      - .peering_ha_insane_mode_az: was null, but now cty.StringVal("")
      - .ldap_username_attribute: was null, but now cty.StringVal("")
      - .otp_mode: was null, but now cty.StringVal("")
      - .vpn_cidr: was null, but now cty.StringVal("")
      - .peering_ha_subnet: was null, but now cty.StringVal("")
      - .peering_ha_zone: was null, but now cty.StringVal("")
      - .insane_mode_az: was null, but now cty.StringVal("")
      - .ldap_base_dn: was null, but now cty.StringVal("")
      - .max_vpn_conn: was null, but now cty.StringVal("")
      - .peering_ha_gw_size: was null, but now cty.StringVal("")
      - .ldap_bind_dn: was null, but now cty.StringVal("")
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:15 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:15 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/01/28 15:29:15 [TRACE] [walkApply] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:15 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:15 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:15 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodeApplyableResourceInstance)
2020/01/28 15:29:15 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:29:15 [TRACE] [walkApply] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:29:15 [TRACE] EvalReadDiff: Read Create change from plan for aviatrix_gateway_dnat.test
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:15 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:15 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:29:15 [TRACE] EvalReadState: no state present for aviatrix_gateway_dnat.test
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:29:15 [TRACE] EvalReadDiff: Read Create change from plan for aviatrix_gateway_dnat.test
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:29:15 [TRACE] GetResourceInstance: aviatrix_gateway.test_gw_aws is a single instance
2020/01/28 15:29:15 [TRACE] Re-validating config for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:15 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:29:15 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/01/28 15:29:15 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:15 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:29:15 [TRACE] EvalReadState: no state present for aviatrix_gateway_dnat.test
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:15 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/01/28 15:29:15 [TRACE] <root>: eval: *terraform.EvalApply
2020/01/28 15:29:15 [TRACE] GetResourceInstance: aviatrix_gateway.test_gw_aws is a single instance
2020/01/28 15:29:15 [DEBUG] aviatrix_gateway_dnat.test: applying the planned Create change
2020/01/28 15:29:15 [TRACE] GRPCProvider: ApplyResourceChange
2020/01/28 15:29:15 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:15 [TRACE] POST https://54.215.219.221/v1/api Body: AdvertisedSpokeRoutes=&AllocateNewEipRead=&CID=X9IaC1YC8ebH1xWSGNey&ConnectedTransit=&CustomizedSpokeVpcRoutes=&DMZEnabled=&DnatPolicy.0.connection=None&DnatPolicy.0.dst_ip=14.0.0.0%2F16&DnatPolicy.0.dst_port=222&DnatPolicy.0.interface=eth0&DnatPolicy.0.mark=22&DnatPolicy.0.new_src_ip=175.32.12.12&DnatPolicy.0.new_src_port=12&DnatPolicy.0.protocol=tcp&DnatPolicy.0.src_ip=13.0.0.0%2F16&DnatPolicy.0.src_port=22&EnableEncryptVolume=&EnableHybridConnection=&EnableLdapRead=&EnableVpcDnsServer=&ExcludeCidrList=&FilteredSpokeVpcRoutes=&IncludeCidrList=&SnatPolicy=&SpokeVpc=&action=update_dnat_config&gateway_name=tfg-aws-q6mvb&policy_list=%5B%7B%22src_ip%22%3A%2213.0.0.0%2F16%22%2C%22src_port%22%3A%2222%22%2C%22dst_ip%22%3A%2214.0.0.0%2F16%22%2C%22dst_port%22%3A%22222%22%2C%22protocol%22%3A%22tcp%22%2C%22interface%22%3A%22eth0%22%2C%22connection%22%3A%22None%22%2C%22mark%22%3A%2222%22%2C%22new_src_ip%22%3A%22175.32.12.12%22%2C%22new_src_port%22%3A%2212%22%7D%5D
2020/01/28 15:29:17 [TRACE] GET https://54.215.219.221/v1/api?CID=X9IaC1YC8ebH1xWSGNey&action=list_vpcs_summary
2020/01/28 15:29:17 [TRACE] reading gateway tfg-aws-q6mvb: &goaviatrix.Gateway{AccountName:"tf-acc-aws-q6mvb", Action:"", AdditionalCidrs:"", AuthMethod:"None", AllocateNewEip:"", AllocateNewEipRead:true, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"disabled", ClientCertSharing:"disabled", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"i-0b7e4fd366beff513", ConnectedTransit:"no", DirectInternet:"yes", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"disable", EnableClientCertSharing:"", EnableElb:"", EnableLdap:"", EnableLdapRead:false, EnableVpcDnsServer:"Disabled", DnsServer:"", PublicDnsServer:"8.8.8.8", EnableNat:"no", SingleAZ:"no", EnableHybridConnection:false, EnablePbr:"", Expiration:"2021-05-02", GatewayZone:"us-west-1c", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"sg-066cf6437cf8568e9", GwSize:"t2.micro", GwSubnetID:"subnet-214f5646", PeeringHASubnet:"", NewZone:"", InsaneMode:"no", InstState:"", IntraVMRoute:"", IsHagw:"no", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"Lic-1578530546.14", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"no", PbrLogging:"", PbrSubnet:"", PrivateIP:"172.31.25.214", PublicIP:"13.52.175.182", SamlEnabled:"no", SandboxIP:"13.52.175.182", SaveTemplate:"", SearchDomains:"", SplitTunnel:"", SpokeVpc:"no", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"N/A", VendorName:"AWS", VpcID:"vpc-727c5215~~test-vpc", VpcNet:"172.31.16.0/20", VpcRegion:"us-west-1", VpcSplunkIPPort:"", VpcState:"waiting", VpcType:"vpc_legacy", VpnCidr:"", VpnStatus:"disabled", Zone:"", VpcSize:"", DMZEnabled:"", EnableActiveMesh:"no", EnableVpnNat:false, EnableDesignatedGateway:"No", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string{}, FilteredSpokeVpcRoutes:[]string{}, AdvertisedSpokeRoutes:[]string{}, IncludeCidrList:[]string{}, ExcludeCidrList:[]string{}}
2020/01/28 15:29:17 [TRACE] GET https://54.215.219.221/v1/api?CID=X9IaC1YC8ebH1xWSGNey&action=list_vpc_by_name&vpc_name=tfg-aws-q6mvb
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:17 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway_dnat.test
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:17 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway_dnat.test
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/01/28 15:29:17 [TRACE] [walkApply] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:17 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:17 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:29:17 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:29:17 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:29:17 [TRACE] [walkApply] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:29:17 [TRACE] GRPCProvider: Close
2020/01/28 15:29:17 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/01/28 15:29:17 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/01/28 15:29:17 [TRACE] [walkApply] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:29:17 [TRACE] [walkApply] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:29:17 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:29:17 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/01/28 15:29:17 [TRACE] [walkApply] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:29:17 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/01/28 15:29:17 [TRACE] dag/walk: visiting "root"
2020/01/28 15:29:17 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:29:17 [TRACE] vertex "root": visit complete
2020/01/28 15:29:17 [DEBUG] New state was assigned lineage "54be7a24-1d23-3cc1-6bdb-75ffec4991fc"
2020/01/28 15:29:17 zjin00: rs is Type = aviatrix_gateway_dnat
2020/01/28 15:29:17 zjin01: foundGateway is &{     false       0                   false      false    tfg-aws-q6mvb                                                       false   false   []   [] [] [] [] [] []}
2020/01/28 15:29:17 [TRACE] GET https://54.215.219.221/v1/api?CID=X9IaC1YC8ebH1xWSGNey&action=list_vpcs_summary
2020/01/28 15:29:17 zjin02: foundGateway2 is &{tf-acc-aws-q6mvb   None  true     disabled disabled 1  i-0b7e4fd366beff513 no yes           disable    false Disabled  8.8.8.8 no no false  2021-05-02 us-west-1c tfg-aws-q6mvb sg-066cf6437cf8568e9 t2.micro subnet-214f5646   no   no          Lic-1578530546.14        no   172.31.25.214 13.52.175.182 no 13.52.175.182    no    N/A AWS vpc-727c5215~~test-vpc 172.31.16.0/20 us-west-1  waiting vpc_legacy  disabled    no false No  false   []   [] [] [] [] [] []}
2020/01/28 15:29:17 [TRACE] GET https://54.215.219.221/v1/api?CID=X9IaC1YC8ebH1xWSGNey&action=list_vpc_by_name&vpc_name=tfg-aws-q6mvb
2020/01/28 15:29:18 [INFO] terraform: building graph: GraphTypePlan
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:18 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
------
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:29:18 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:29:18 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:2,1-43
2020/01/28 15:29:18 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:10,1-42
2020/01/28 15:29:18 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:19,1-40
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
------
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:18 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_account.test_acc_aws
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:18 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:18 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:18 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:18 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:29:18 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:29:18 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:29:18 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:29:18 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:29:18 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:18 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:29:18 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:29:18 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:29:18 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:29:18 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:18 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws]
2020/01/28 15:29:18 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:18 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:18 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws]
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/01/28 15:29:18 [TRACE] ForcedCBDTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:29:18 [TRACE] ForcedCBDTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:29:18 [TRACE] ForcedCBDTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:29:18 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:29:18 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:29:18 [DEBUG] Starting graph walk: walkPlan
2020/01/28 15:29:18 [TRACE] dag/walk: updating graph
2020/01/28 15:29:18 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:29:18 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:18 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:18 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:18 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:29:18 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:18 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:29:18 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:18 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:18 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:18 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:18 [TRACE] dag/walk: added edge: "root" waiting on "provider.aviatrix (close)"
2020/01/28 15:29:18 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "provider.aviatrix"
2020/01/28 15:29:18 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_account.test_acc_aws"
2020/01/28 15:29:18 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/01/28 15:29:18 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:29:18 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:29:18 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:29:18 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:29:18 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/01/28 15:29:18 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:29:18 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:29:18 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:29:18 [TRACE] [walkPlan] Entering eval tree: provider.aviatrix
2020/01/28 15:29:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:18 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:29:18 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:29:18 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:18 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:18 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:18 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:18 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:18 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/01/28 15:29:18 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:29:18 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:18 [TRACE] GRPCProvider: Configure
2020/01/28 15:29:18 [INFO] Parsed Aviatrix login: "admin"
2020/01/28 15:29:18 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:18 [TRACE] POST https://54.215.219.221/v1/api Body: action=login&password=Aviatrix123%23&username=admin
2020/01/28 15:29:18 [TRACE] CID is 'XfT5anLecPt6gfdKenOv'.
2020/01/28 15:29:18 [INFO] Aviatrix Client configured for use
2020/01/28 15:29:18 [TRACE] GET https://54.215.219.221/v1/api?CID=XfT5anLecPt6gfdKenOv&action=list_version_info
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: provider.aviatrix
2020/01/28 15:29:19 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:29:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": expanding dynamic subgraph
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:19 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": entering dynamic subgraph
2020/01/28 15:29:19 [TRACE] dag/walk: updating graph
2020/01/28 15:29:19 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:29:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:19 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] UpgradeResourceState: schema version of aviatrix_account.test_acc_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:19 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:29:19 [TRACE] Re-validating config for "aviatrix_account.test_acc_aws"
2020/01/28 15:29:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:29:19 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:19 [TRACE] EvalWriteState: writing current state object for aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:19 [TRACE] EvalWriteDiff: recorded NoOp change for aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": dynamic subgraph completed successfully
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:29:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": expanding dynamic subgraph
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: []
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": entering dynamic subgraph
2020/01/28 15:29:19 [TRACE] dag/walk: updating graph
2020/01/28 15:29:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:29:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:19 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway.test_gw_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:19 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:29:19 [TRACE] GetResourceInstance: aviatrix_account.test_acc_aws is a single instance
2020/01/28 15:29:19 [TRACE] Re-validating config for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:29:19 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:19 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:19 [TRACE] EvalWriteDiff: recorded NoOp change for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": dynamic subgraph completed successfully
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:29:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": expanding dynamic subgraph
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_gateway_dnat.test - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: []
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": entering dynamic subgraph
2020/01/28 15:29:19 [TRACE] dag/walk: updating graph
2020/01/28 15:29:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:29:19 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:19 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway_dnat.test is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:19 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:29:19 [TRACE] GetResourceInstance: aviatrix_gateway.test_gw_aws is a single instance
2020/01/28 15:29:19 [TRACE] Re-validating config for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:19 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:29:19 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:19 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:19 [TRACE] EvalWriteDiff: recorded NoOp change for aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": dynamic subgraph completed successfully
2020/01/28 15:29:19 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/01/28 15:29:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/01/28 15:29:19 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:29:19 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:29:19 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:29:19 [TRACE] [walkPlan] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:29:19 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/01/28 15:29:19 [TRACE] GRPCProvider: Close
2020/01/28 15:29:19 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:19 [TRACE] [walkPlan] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:29:19 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "root"
2020/01/28 15:29:19 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:29:19 [TRACE] vertex "root": visit complete
2020/01/28 15:29:19 [INFO] terraform: building graph: GraphTypeRefresh
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:19 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
------
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:19 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:29:19 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:29:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_account.test_acc_aws" (*terraform.NodeRefreshableManagedResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:2,1-43
2020/01/28 15:29:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway.test_gw_aws" (*terraform.NodeRefreshableManagedResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:10,1-42
2020/01/28 15:29:19 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway_dnat.test" (*terraform.NodeRefreshableManagedResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:19,1-40
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
------
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:19 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:19 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:19 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:19 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodeRefreshableManagedResource) needs provider.aviatrix
2020/01/28 15:29:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodeRefreshableManagedResource) needs provider.aviatrix
2020/01/28 15:29:19 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodeRefreshableManagedResource) needs provider.aviatrix
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:19 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:29:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:29:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:29:19 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:29:19 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:19 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws]
2020/01/28 15:29:19 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws]
2020/01/28 15:29:19 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
  aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
  aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
  aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:19 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:29:19 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
  aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResource
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
  aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResource
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResource
------
2020/01/28 15:29:19 [DEBUG] Starting graph walk: walkRefresh
2020/01/28 15:29:19 [TRACE] dag/walk: updating graph
2020/01/28 15:29:19 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:29:19 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:19 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:19 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:29:19 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "provider.aviatrix"
2020/01/28 15:29:19 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_account.test_acc_aws"
2020/01/28 15:29:19 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:19 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:19 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:29:19 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:29:19 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:29:19 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:29:19 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:29:19 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:29:19 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:29:19 [TRACE] [walkRefresh] Entering eval tree: provider.aviatrix
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:29:19 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:29:19 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:19 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:19 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/01/28 15:29:19 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:29:19 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:19 [TRACE] GRPCProvider: Configure
2020/01/28 15:29:19 [INFO] Parsed Aviatrix login: "admin"
2020/01/28 15:29:19 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:19 [TRACE] POST https://54.215.219.221/v1/api Body: action=login&password=Aviatrix123%23&username=admin
2020/01/28 15:29:20 [TRACE] CID is 'JQZaWMdJwsyFxMQokUTR'.
2020/01/28 15:29:20 [INFO] Aviatrix Client configured for use
2020/01/28 15:29:20 [TRACE] GET https://54.215.219.221/v1/api?CID=JQZaWMdJwsyFxMQokUTR&action=list_version_info
2020/01/28 15:29:20 [TRACE] [walkRefresh] Exiting eval tree: provider.aviatrix
2020/01/28 15:29:20 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:29:20 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodeRefreshableManagedResource)
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_account.test_acc_aws": expanding dynamic subgraph
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
------
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:20 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_account.test_acc_aws": entering dynamic subgraph
2020/01/28 15:29:20 [TRACE] dag/walk: updating graph
2020/01/28 15:29:20 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:20 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/01/28 15:29:20 [TRACE] NodeRefreshableManagedResourceInstance: aviatrix_account.test_acc_aws will be refreshed
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:29:20 [TRACE] [walkRefresh] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:20 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:29:20 [TRACE] UpgradeResourceState: schema version of aviatrix_account.test_acc_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:20 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/01/28 15:29:20 [TRACE] GRPCProvider: ReadResource
2020/01/28 15:29:20 [INFO] Looking for Aviatrix account: &goaviatrix.Account{CID:"", Action:"", AccountName:"tf-acc-aws-q6mvb", CloudType:0, AwsAccountNumber:"", AwsIam:"", AwsAccessKey:"", AwsSecretKey:"", AwsRoleApp:"", AwsRoleEc2:"", AzureSubscriptionId:"", ArmSubscriptionId:"", ArmApplicationEndpoint:"", ArmApplicationClientId:"", ArmApplicationClientSecret:"", AwsgovAccountNumber:"", AwsgovAccessKey:"", AwsgovSecretKey:"", AwsgovCloudtrailBucket:"", AzurechinaSubscriptionId:"", AwschinaAccountNumber:"", AwschinaAccessKey:"", AwschinaSecretKey:"", ArmChinaSubscriptionId:"", ArmChinaApplicationEndpoint:"", ArmChinaApplicationClientId:"", ArmChinaApplicationClientSecret:"", ProjectCredentialsFilename:"", ProjectCredentialsContents:"", GcloudProjectCredentialsFilepathLocal:"", GcloudProjectCredentialsFilepathController:"", GcloudProjectName:"", OciTenancyID:"", OciUserID:"", OciCompartmentID:"", OciApiPrivateKeyFilePath:""}
2020/01/28 15:29:20 [TRACE] GET https://54.215.219.221/v1/api?CID=JQZaWMdJwsyFxMQokUTR&action=list_accounts
2020/01/28 15:29:20 [INFO] Found Aviatrix Account tf-acc-aws-q6mvb
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:20 [TRACE] EvalWriteState: writing current state object for aviatrix_account.test_acc_aws
2020/01/28 15:29:20 [TRACE] [walkRefresh] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_account.test_acc_aws": dynamic subgraph completed successfully
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:20 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodeRefreshableManagedResource)
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_gateway.test_gw_aws": expanding dynamic subgraph
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
------
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:20 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: []
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:20 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:20 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_gateway.test_gw_aws": entering dynamic subgraph
2020/01/28 15:29:20 [TRACE] dag/walk: updating graph
2020/01/28 15:29:20 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:20 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/01/28 15:29:20 [TRACE] NodeRefreshableManagedResourceInstance: aviatrix_gateway.test_gw_aws will be refreshed
2020/01/28 15:29:20 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:29:20 [TRACE] [walkRefresh] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:20 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:20 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway.test_gw_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:20 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:20 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/01/28 15:29:20 [TRACE] GRPCProvider: ReadResource
2020/01/28 15:29:20 [TRACE] GET https://54.215.219.221/v1/api?CID=JQZaWMdJwsyFxMQokUTR&action=list_vpcs_summary
2020/01/28 15:29:21 [TRACE] reading gateway tfg-aws-q6mvb: &goaviatrix.Gateway{AccountName:"tf-acc-aws-q6mvb", Action:"", AdditionalCidrs:"", AuthMethod:"None", AllocateNewEip:"", AllocateNewEipRead:true, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"disabled", ClientCertSharing:"disabled", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"i-0b7e4fd366beff513", ConnectedTransit:"no", DirectInternet:"yes", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"disable", EnableClientCertSharing:"", EnableElb:"", EnableLdap:"", EnableLdapRead:false, EnableVpcDnsServer:"Disabled", DnsServer:"", PublicDnsServer:"8.8.8.8", EnableNat:"no", SingleAZ:"no", EnableHybridConnection:false, EnablePbr:"", Expiration:"2021-05-02", GatewayZone:"us-west-1c", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"sg-066cf6437cf8568e9", GwSize:"t2.micro", GwSubnetID:"subnet-214f5646", PeeringHASubnet:"", NewZone:"", InsaneMode:"no", InstState:"", IntraVMRoute:"", IsHagw:"no", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"Lic-1578530546.14", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"no", PbrLogging:"", PbrSubnet:"", PrivateIP:"172.31.25.214", PublicIP:"13.52.175.182", SamlEnabled:"no", SandboxIP:"13.52.175.182", SaveTemplate:"", SearchDomains:"", SplitTunnel:"", SpokeVpc:"no", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"N/A", VendorName:"AWS", VpcID:"vpc-727c5215~~test-vpc", VpcNet:"172.31.16.0/20", VpcRegion:"us-west-1", VpcSplunkIPPort:"", VpcState:"waiting", VpcType:"vpc_legacy", VpnCidr:"", VpnStatus:"disabled", Zone:"", VpcSize:"", DMZEnabled:"", EnableActiveMesh:"no", EnableVpnNat:false, EnableDesignatedGateway:"No", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string{}, FilteredSpokeVpcRoutes:[]string{}, AdvertisedSpokeRoutes:[]string{}, IncludeCidrList:[]string{}, ExcludeCidrList:[]string{}}
2020/01/28 15:29:21 [TRACE] GET https://54.215.219.221/v1/api?CID=JQZaWMdJwsyFxMQokUTR&action=list_vpc_by_name&vpc_name=tfg-aws-q6mvb
2020/01/28 15:29:21 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:21 [TRACE] POST https://54.215.219.221/v1/api Body: CID=JQZaWMdJwsyFxMQokUTR&action=list_resource_tags&cloud_type=1&resource_name=tfg-aws-q6mvb&resource_type=gw
2020/01/28 15:29:21 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:21 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:21 [TRACE] [walkRefresh] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:21 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:21 [TRACE] vertex "aviatrix_gateway.test_gw_aws": dynamic subgraph completed successfully
2020/01/28 15:29:21 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:21 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:21 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodeRefreshableManagedResource)
2020/01/28 15:29:21 [TRACE] vertex "aviatrix_gateway_dnat.test": expanding dynamic subgraph
2020/01/28 15:29:21 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:21 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
------
2020/01/28 15:29:21 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:21 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:21 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:21 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:21 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:21 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:21 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:21 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: []
2020/01/28 15:29:21 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:21 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:21 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:21 [TRACE] vertex "aviatrix_gateway_dnat.test": entering dynamic subgraph
2020/01/28 15:29:21 [TRACE] dag/walk: updating graph
2020/01/28 15:29:21 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:21 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:21 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/01/28 15:29:21 [TRACE] NodeRefreshableManagedResourceInstance: aviatrix_gateway_dnat.test will be refreshed
2020/01/28 15:29:21 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:29:21 [TRACE] [walkRefresh] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:21 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:21 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:21 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:21 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:29:21 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway_dnat.test is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:21 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:21 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/01/28 15:29:21 [TRACE] GRPCProvider: ReadResource
2020/01/28 15:29:21 [TRACE] GET https://54.215.219.221/v1/api?CID=JQZaWMdJwsyFxMQokUTR&action=list_vpcs_summary
2020/01/28 15:29:22 [TRACE] reading gateway tfg-aws-q6mvb: &goaviatrix.Gateway{AccountName:"tf-acc-aws-q6mvb", Action:"", AdditionalCidrs:"", AuthMethod:"None", AllocateNewEip:"", AllocateNewEipRead:true, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"disabled", ClientCertSharing:"disabled", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"i-0b7e4fd366beff513", ConnectedTransit:"no", DirectInternet:"yes", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"disable", EnableClientCertSharing:"", EnableElb:"", EnableLdap:"", EnableLdapRead:false, EnableVpcDnsServer:"Disabled", DnsServer:"", PublicDnsServer:"8.8.8.8", EnableNat:"no", SingleAZ:"no", EnableHybridConnection:false, EnablePbr:"", Expiration:"2021-05-02", GatewayZone:"us-west-1c", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"sg-066cf6437cf8568e9", GwSize:"t2.micro", GwSubnetID:"subnet-214f5646", PeeringHASubnet:"", NewZone:"", InsaneMode:"no", InstState:"", IntraVMRoute:"", IsHagw:"no", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"Lic-1578530546.14", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"no", PbrLogging:"", PbrSubnet:"", PrivateIP:"172.31.25.214", PublicIP:"13.52.175.182", SamlEnabled:"no", SandboxIP:"13.52.175.182", SaveTemplate:"", SearchDomains:"", SplitTunnel:"", SpokeVpc:"no", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"N/A", VendorName:"AWS", VpcID:"vpc-727c5215~~test-vpc", VpcNet:"172.31.16.0/20", VpcRegion:"us-west-1", VpcSplunkIPPort:"", VpcState:"waiting", VpcType:"vpc_legacy", VpnCidr:"", VpnStatus:"disabled", Zone:"", VpcSize:"", DMZEnabled:"", EnableActiveMesh:"no", EnableVpnNat:false, EnableDesignatedGateway:"No", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string{}, FilteredSpokeVpcRoutes:[]string{}, AdvertisedSpokeRoutes:[]string{}, IncludeCidrList:[]string{}, ExcludeCidrList:[]string{}}
2020/01/28 15:29:22 [TRACE] GET https://54.215.219.221/v1/api?CID=JQZaWMdJwsyFxMQokUTR&action=list_vpc_by_name&vpc_name=tfg-aws-q6mvb
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:22 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway_dnat.test
2020/01/28 15:29:22 [TRACE] [walkRefresh] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:22 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:22 [TRACE] vertex "aviatrix_gateway_dnat.test": dynamic subgraph completed successfully
2020/01/28 15:29:22 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:22 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:29:22 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:29:22 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:29:22 [TRACE] [walkRefresh] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:29:22 [TRACE] GRPCProvider: Close
2020/01/28 15:29:22 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:22 [TRACE] [walkRefresh] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:29:22 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:29:22 [DEBUG] New state was assigned lineage "7b05719a-3b28-f8fe-1172-b98a662c4f27"
2020/01/28 15:29:22 [INFO] terraform: building graph: GraphTypePlan
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:22 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
------
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:29:22 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:29:22 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:2,1-43
2020/01/28 15:29:22 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:10,1-42
2020/01/28 15:29:22 [TRACE] AttachResourceConfigTransformer: attaching to "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) config from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test764045642/main.tf:19,1-40
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
------
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:22 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_gateway_dnat.test
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:22 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:22 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:22 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:22 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:29:22 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:29:22 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:29:22 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:29:22 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:29:22 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) needs provider.aviatrix
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:22 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:29:22 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:29:22 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:29:22 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:29:22 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:22 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:22 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:22 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws]
2020/01/28 15:29:22 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws]
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/01/28 15:29:22 [TRACE] ForcedCBDTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:29:22 [TRACE] ForcedCBDTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:29:22 [TRACE] ForcedCBDTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:29:22 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:29:22 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
  aviatrix_account.test_acc_aws - *terraform.NodePlannableResource
aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
  aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResource
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test - *terraform.NodePlannableResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:29:22 [DEBUG] Starting graph walk: walkPlan
2020/01/28 15:29:22 [TRACE] dag/walk: updating graph
2020/01/28 15:29:22 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:22 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:29:22 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:22 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:29:22 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:29:22 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:22 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:22 [TRACE] dag/walk: added edge: "root" waiting on "provider.aviatrix (close)"
2020/01/28 15:29:22 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:22 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "provider.aviatrix"
2020/01/28 15:29:22 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:22 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_account.test_acc_aws"
2020/01/28 15:29:22 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:22 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:22 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/01/28 15:29:22 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:29:22 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/01/28 15:29:22 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:29:22 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:29:22 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:29:22 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:29:22 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:29:22 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:29:22 [TRACE] [walkPlan] Entering eval tree: provider.aviatrix
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:29:22 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:29:22 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:22 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:22 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/01/28 15:29:22 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:29:22 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:22 [TRACE] GRPCProvider: Configure
2020/01/28 15:29:22 [INFO] Parsed Aviatrix login: "admin"
2020/01/28 15:29:22 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:22 [TRACE] POST https://54.215.219.221/v1/api Body: action=login&password=Aviatrix123%23&username=admin
2020/01/28 15:29:23 [TRACE] CID is 'lvb0rzVdf0jBK9oTNibU'.
2020/01/28 15:29:23 [INFO] Aviatrix Client configured for use
2020/01/28 15:29:23 [TRACE] GET https://54.215.219.221/v1/api?CID=lvb0rzVdf0jBK9oTNibU&action=list_version_info
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: provider.aviatrix
2020/01/28 15:29:23 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:29:23 [TRACE] [walkPlan] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": expanding dynamic subgraph
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:23 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": entering dynamic subgraph
2020/01/28 15:29:23 [TRACE] dag/walk: updating graph
2020/01/28 15:29:23 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:29:23 [TRACE] [walkPlan] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:23 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:29:23 [TRACE] UpgradeResourceState: schema version of aviatrix_account.test_acc_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:23 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:29:23 [TRACE] Re-validating config for "aviatrix_account.test_acc_aws"
2020/01/28 15:29:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:29:23 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:23 [TRACE] EvalWriteState: writing current state object for aviatrix_account.test_acc_aws
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:23 [TRACE] EvalWriteDiff: recorded NoOp change for aviatrix_account.test_acc_aws
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": dynamic subgraph completed successfully
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:29:23 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": expanding dynamic subgraph
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_gateway.test_gw_aws - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:23 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: []
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": entering dynamic subgraph
2020/01/28 15:29:23 [TRACE] dag/walk: updating graph
2020/01/28 15:29:23 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:29:23 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:23 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:23 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway.test_gw_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:23 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:29:23 [TRACE] GetResourceInstance: aviatrix_account.test_acc_aws is a single instance
2020/01/28 15:29:23 [TRACE] Re-validating config for "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:29:23 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:23 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:23 [TRACE] EvalWriteDiff: recorded NoOp change for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": dynamic subgraph completed successfully
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodePlannableResource)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:29:23 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": expanding dynamic subgraph
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
aviatrix_gateway_dnat.test - *terraform.NodePlannableResourceInstance
------
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:23 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: []
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:23 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:23 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": entering dynamic subgraph
2020/01/28 15:29:23 [TRACE] dag/walk: updating graph
2020/01/28 15:29:23 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodePlannableResourceInstance)
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:29:23 [TRACE] [walkPlan] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:23 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:29:23 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway_dnat.test is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:23 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalDiff
2020/01/28 15:29:23 [TRACE] GetResourceInstance: aviatrix_gateway.test_gw_aws is a single instance
2020/01/28 15:29:23 [TRACE] Re-validating config for "aviatrix_gateway_dnat.test"
2020/01/28 15:29:23 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/01/28 15:29:23 [TRACE] GRPCProvider: PlanResourceChange
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:23 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway_dnat.test
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:23 [TRACE] EvalWriteDiff: recorded NoOp change for aviatrix_gateway_dnat.test
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": dynamic subgraph completed successfully
2020/01/28 15:29:23 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/01/28 15:29:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/01/28 15:29:23 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:29:23 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:29:23 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:29:23 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/01/28 15:29:23 [TRACE] [walkPlan] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:29:23 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:29:23 [TRACE] GRPCProvider: Close
2020/01/28 15:29:23 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:23 [TRACE] [walkPlan] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:29:23 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:29:23 [TRACE] dag/walk: visiting "root"
2020/01/28 15:29:23 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:29:23 [TRACE] vertex "root": visit complete
2020/01/28 15:29:23 [DEBUG] Test: Executing step 1
2020/01/28 15:29:24 [TRACE] ModuleInstaller: installing child modules for /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test118604833 into /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test118604833/.modules
2020/01/28 15:29:24 [TRACE] modsdir: writing modules manifest to /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test118604833/.modules/modules.json
2020/01/28 15:29:24 [TRACE] terraform.NewContext: starting
2020/01/28 15:29:24 [TRACE] terraform.NewContext: resolving provider version selections
2020/01/28 15:29:24 [TRACE] terraform.NewContext: loading provider schemas
2020/01/28 15:29:24 [TRACE] LoadSchemas: retrieving schema for provider type "aviatrix"
2020/01/28 15:29:24 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:24 [TRACE] GRPCProvider: Close
2020/01/28 15:29:24 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:24 [TRACE] terraform.NewContext: complete
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:24 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.ImportStateTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.ImportStateTransformer with new graph:
aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") - *terraform.graphNodeImportState
------
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:24 [TRACE] ProviderConfigTransformer: attaching to "provider.aviatrix" provider configuration from /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test118604833/main.tf:1,1-20
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") - *terraform.graphNodeImportState
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:24 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:24 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb")
2020/01/28 15:29:24 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")" (*terraform.graphNodeImportState) needs provider.aviatrix
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") - *terraform.graphNodeImportState
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:24 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") - *terraform.graphNodeImportState
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.ImportProviderValidateTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.ImportProviderValidateTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:29:24 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:24 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")" references: []
2020/01/28 15:29:24 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") - *terraform.graphNodeImportState
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") - *terraform.graphNodeImportState
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:24 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:29:24 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") - *terraform.graphNodeImportState
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb") - *terraform.graphNodeImportState
------
2020/01/28 15:29:24 [DEBUG] Starting graph walk: walkImport
2020/01/28 15:29:24 [TRACE] dag/walk: updating graph
2020/01/28 15:29:24 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:29:24 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:29:24 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")"
2020/01/28 15:29:24 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")" waiting on "provider.aviatrix"
2020/01/28 15:29:24 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")"
2020/01/28 15:29:24 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")", sending new deps
2020/01/28 15:29:24 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:29:24 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:29:24 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:29:24 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:29:24 [TRACE] [walkImport] Entering eval tree: provider.aviatrix
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:29:24 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:24 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:24 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/01/28 15:29:24 [TRACE] buildProviderConfig for provider.aviatrix: using explicit config only
2020/01/28 15:29:24 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:24 [TRACE] GRPCProvider: Configure
2020/01/28 15:29:24 [INFO] Parsed Aviatrix login: "admin"
2020/01/28 15:29:24 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:24 [TRACE] POST https://54.215.219.221/v1/api Body: action=login&password=Aviatrix123%23&username=admin
2020/01/28 15:29:24 [TRACE] CID is 'L3y5mJ25Lt0PmHRNicmj'.
2020/01/28 15:29:24 [INFO] Aviatrix Client configured for use
2020/01/28 15:29:24 [TRACE] GET https://54.215.219.221/v1/api?CID=L3y5mJ25Lt0PmHRNicmj&action=list_version_info
2020/01/28 15:29:25 [TRACE] [walkImport] Exiting eval tree: provider.aviatrix
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")"
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")": starting visit (*terraform.graphNodeImportState)
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")": evaluating
2020/01/28 15:29:25 [TRACE] [walkImport] Entering eval tree: aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb")
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalImportState
2020/01/28 15:29:25 [TRACE] GRPCProvider: ImportResourceState
2020/01/28 15:29:25 [TRACE] EvalImportState: import aviatrix_gateway_dnat.test "tfg-aws-q6mvb" produced instance object of type aviatrix_gateway_dnat
2020/01/28 15:29:25 [TRACE] [walkImport] Exiting eval tree: aviatrix_gateway_dnat.test (import id "tfg-aws-q6mvb")
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")": expanding dynamic subgraph
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")": entering dynamic subgraph
2020/01/28 15:29:25 [TRACE] dag/walk: updating graph
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "import aviatrix_gateway_dnat.test result"
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "import aviatrix_gateway_dnat.test result"
2020/01/28 15:29:25 [TRACE] vertex "import aviatrix_gateway_dnat.test result": starting visit (*terraform.graphNodeImportStateSub)
2020/01/28 15:29:25 [TRACE] vertex "import aviatrix_gateway_dnat.test result": evaluating
2020/01/28 15:29:25 [TRACE] [walkImport] Entering eval tree: import aviatrix_gateway_dnat.test result
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/01/28 15:29:25 [TRACE] GRPCProvider: ReadResource
2020/01/28 15:29:25 [DEBUG] Looks like an import, no gateway name received. Import Id is tfg-aws-q6mvb
2020/01/28 15:29:25 [TRACE] GET https://54.215.219.221/v1/api?CID=L3y5mJ25Lt0PmHRNicmj&action=list_vpcs_summary
2020/01/28 15:29:25 [TRACE] reading gateway tfg-aws-q6mvb: &goaviatrix.Gateway{AccountName:"tf-acc-aws-q6mvb", Action:"", AdditionalCidrs:"", AuthMethod:"None", AllocateNewEip:"", AllocateNewEipRead:true, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"disabled", ClientCertSharing:"disabled", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"i-0b7e4fd366beff513", ConnectedTransit:"no", DirectInternet:"yes", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"disable", EnableClientCertSharing:"", EnableElb:"", EnableLdap:"", EnableLdapRead:false, EnableVpcDnsServer:"Disabled", DnsServer:"", PublicDnsServer:"8.8.8.8", EnableNat:"no", SingleAZ:"no", EnableHybridConnection:false, EnablePbr:"", Expiration:"2021-05-02", GatewayZone:"us-west-1c", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"sg-066cf6437cf8568e9", GwSize:"t2.micro", GwSubnetID:"subnet-214f5646", PeeringHASubnet:"", NewZone:"", InsaneMode:"no", InstState:"", IntraVMRoute:"", IsHagw:"no", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"Lic-1578530546.14", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"no", PbrLogging:"", PbrSubnet:"", PrivateIP:"172.31.25.214", PublicIP:"13.52.175.182", SamlEnabled:"no", SandboxIP:"13.52.175.182", SaveTemplate:"", SearchDomains:"", SplitTunnel:"", SpokeVpc:"no", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"N/A", VendorName:"AWS", VpcID:"vpc-727c5215~~test-vpc", VpcNet:"172.31.16.0/20", VpcRegion:"us-west-1", VpcSplunkIPPort:"", VpcState:"waiting", VpcType:"vpc_legacy", VpnCidr:"", VpnStatus:"disabled", Zone:"", VpcSize:"", DMZEnabled:"", EnableActiveMesh:"no", EnableVpnNat:false, EnableDesignatedGateway:"No", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string{}, FilteredSpokeVpcRoutes:[]string{}, AdvertisedSpokeRoutes:[]string{}, IncludeCidrList:[]string{}, ExcludeCidrList:[]string{}}
2020/01/28 15:29:25 [TRACE] GET https://54.215.219.221/v1/api?CID=L3y5mJ25Lt0PmHRNicmj&action=list_vpc_by_name&vpc_name=tfg-aws-q6mvb
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalImportStateVerify
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:25 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway_dnat.test
2020/01/28 15:29:25 [TRACE] [walkImport] Exiting eval tree: import aviatrix_gateway_dnat.test result
2020/01/28 15:29:25 [TRACE] vertex "import aviatrix_gateway_dnat.test result": visit complete
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")": dynamic subgraph completed successfully
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway_dnat.test (import id \"tfg-aws-q6mvb\")": visit complete
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:29:25 [TRACE] [walkImport] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:29:25 [TRACE] GRPCProvider: Close
2020/01/28 15:29:25 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:25 [TRACE] [walkImport] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:29:25 [DEBUG] New state was assigned lineage "6f5c8875-8e00-3bc8-44d2-3332d2fda289"
2020/01/28 15:29:25 [WARN] Test: Executing destroy step
2020/01/28 15:29:25 [TRACE] ModuleInstaller: installing child modules for /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test091326220 into /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test091326220/.modules
2020/01/28 15:29:25 [TRACE] modsdir: writing modules manifest to /var/folders/fw/j150spl55gv7y24rcy22nwnh0000gp/T/tf-test091326220/.modules/modules.json
2020/01/28 15:29:25 [TRACE] Preserving existing state lineage "7b05719a-3b28-f8fe-1172-b98a662c4f27"
2020/01/28 15:29:25 [TRACE] terraform.NewContext: starting
2020/01/28 15:29:25 [TRACE] terraform.NewContext: resolving provider version selections
2020/01/28 15:29:25 [TRACE] terraform.NewContext: loading provider schemas
2020/01/28 15:29:25 [TRACE] LoadSchemas: retrieving schema for provider type "aviatrix"
2020/01/28 15:29:25 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:25 [TRACE] GRPCProvider: Close
2020/01/28 15:29:25 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:25 [TRACE] terraform.NewContext: complete
2020/01/28 15:29:25 [INFO] terraform: building graph: GraphTypeValidate
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:25 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:29:25 [TRACE] OrphanResourceInstanceTransformer: adding single-instance orphan node for aviatrix_account.test_acc_aws
2020/01/28 15:29:25 [TRACE] OrphanResourceInstanceTransformer: adding single-instance orphan node for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:25 [TRACE] OrphanResourceInstanceTransformer: adding single-instance orphan node for aviatrix_gateway_dnat.test
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:29:25 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
------
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:25 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_account.test_acc_aws
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:25 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix exactly
2020/01/28 15:29:25 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix exactly
2020/01/28 15:29:25 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix exactly
2020/01/28 15:29:25 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:29:25 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:25 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:29:25 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:25 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:29:25 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:29:25 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:25 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:29:25 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:29:25 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:25 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:25 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws aviatrix_account.test_acc_aws]
2020/01/28 15:29:25 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws aviatrix_gateway.test_gw_aws]
2020/01/28 15:29:25 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:29:25 [DEBUG] Starting graph walk: walkValidate
2020/01/28 15:29:25 [TRACE] dag/walk: updating graph
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "provider.aviatrix"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "root" waiting on "provider.aviatrix (close)"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_account.test_acc_aws"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:29:25 [TRACE] [walkValidate] Entering eval tree: provider.aviatrix
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:29:25 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:29:25 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/01/28 15:29:25 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:29:25 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:25 [TRACE] GRPCProvider: PrepareProviderConfig
2020/01/28 15:29:25 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:25 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:25 [TRACE] [walkValidate] Exiting eval tree: provider.aviatrix
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodeAbstractResourceInstance)
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodeAbstractResourceInstance)
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodeAbstractResourceInstance)
2020/01/28 15:29:25 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:25 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/01/28 15:29:25 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/01/28 15:29:25 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:29:25 [TRACE] [walkValidate] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:29:25 [TRACE] GRPCProvider: Close
2020/01/28 15:29:25 [WARN] Not fixing up EachModes for aviatrix_account.test_acc_aws because it has no config
2020/01/28 15:29:25 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:25 [WARN] Not fixing up EachModes for aviatrix_gateway.test_gw_aws because it has no config
2020/01/28 15:29:25 [TRACE] [walkValidate] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:29:25 [WARN] Not fixing up EachModes for aviatrix_gateway_dnat.test because it has no config
2020/01/28 15:29:25 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:29:25 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "root"
2020/01/28 15:29:25 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:29:25 [TRACE] vertex "root": visit complete
2020/01/28 15:29:25 [INFO] terraform: building graph: GraphTypeRefresh
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:25 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:25 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:29:25 [TRACE] OrphanResourceInstanceTransformer: adding single-instance orphan node for aviatrix_account.test_acc_aws
2020/01/28 15:29:25 [TRACE] OrphanResourceInstanceTransformer: adding single-instance orphan node for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:25 [TRACE] OrphanResourceInstanceTransformer: adding single-instance orphan node for aviatrix_gateway_dnat.test
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:29:25 [TRACE] StateTransformer: creating nodes for deposed instance objects only
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
------
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:25 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_account.test_acc_aws
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:25 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix exactly
2020/01/28 15:29:25 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix exactly
2020/01/28 15:29:25 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix exactly
2020/01/28 15:29:25 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:29:25 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodeRefreshableManagedResourceInstance) needs provider.aviatrix
2020/01/28 15:29:25 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:29:25 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodeRefreshableManagedResourceInstance) needs provider.aviatrix
2020/01/28 15:29:25 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:29:25 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodeRefreshableManagedResourceInstance) needs provider.aviatrix
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:25 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:29:25 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:29:25 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:29:25 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:29:25 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:25 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:25 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws aviatrix_account.test_acc_aws]
2020/01/28 15:29:25 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws aviatrix_gateway.test_gw_aws]
2020/01/28 15:29:25 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.ReferenceTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
  aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:25 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:29:25 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
  aviatrix_account.test_acc_aws - *terraform.NodeRefreshableManagedResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodeRefreshableManagedResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_gateway_dnat.test - *terraform.NodeRefreshableManagedResourceInstance
------
2020/01/28 15:29:25 [DEBUG] Starting graph walk: walkRefresh
2020/01/28 15:29:25 [TRACE] dag/walk: updating graph
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:25 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "provider.aviatrix"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_account.test_acc_aws"
2020/01/28 15:29:25 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:29:25 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:29:25 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:29:25 [TRACE] [walkRefresh] Entering eval tree: provider.aviatrix
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:29:25 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:29:25 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:25 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:25 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/01/28 15:29:25 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:29:25 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:25 [TRACE] GRPCProvider: Configure
2020/01/28 15:29:25 [INFO] Parsed Aviatrix login: "admin"
2020/01/28 15:29:25 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:25 [TRACE] POST https://54.215.219.221/v1/api Body: action=login&password=Aviatrix123%23&username=admin
2020/01/28 15:29:26 [TRACE] CID is 'FvJQmgtz61QFTK1AlhhH'.
2020/01/28 15:29:26 [INFO] Aviatrix Client configured for use
2020/01/28 15:29:26 [TRACE] GET https://54.215.219.221/v1/api?CID=FvJQmgtz61QFTK1AlhhH&action=list_version_info
2020/01/28 15:29:26 [TRACE] [walkRefresh] Exiting eval tree: provider.aviatrix
2020/01/28 15:29:26 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:29:26 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:26 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/01/28 15:29:26 [TRACE] NodeRefreshableManagedResourceInstance: aviatrix_account.test_acc_aws will be refreshed
2020/01/28 15:29:26 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:29:26 [TRACE] [walkRefresh] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:26 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:29:26 [TRACE] UpgradeResourceState: schema version of aviatrix_account.test_acc_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:26 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/01/28 15:29:26 [TRACE] GRPCProvider: ReadResource
2020/01/28 15:29:26 [INFO] Looking for Aviatrix account: &goaviatrix.Account{CID:"", Action:"", AccountName:"tf-acc-aws-q6mvb", CloudType:0, AwsAccountNumber:"", AwsIam:"", AwsAccessKey:"", AwsSecretKey:"", AwsRoleApp:"", AwsRoleEc2:"", AzureSubscriptionId:"", ArmSubscriptionId:"", ArmApplicationEndpoint:"", ArmApplicationClientId:"", ArmApplicationClientSecret:"", AwsgovAccountNumber:"", AwsgovAccessKey:"", AwsgovSecretKey:"", AwsgovCloudtrailBucket:"", AzurechinaSubscriptionId:"", AwschinaAccountNumber:"", AwschinaAccessKey:"", AwschinaSecretKey:"", ArmChinaSubscriptionId:"", ArmChinaApplicationEndpoint:"", ArmChinaApplicationClientId:"", ArmChinaApplicationClientSecret:"", ProjectCredentialsFilename:"", ProjectCredentialsContents:"", GcloudProjectCredentialsFilepathLocal:"", GcloudProjectCredentialsFilepathController:"", GcloudProjectName:"", OciTenancyID:"", OciUserID:"", OciCompartmentID:"", OciApiPrivateKeyFilePath:""}
2020/01/28 15:29:26 [TRACE] GET https://54.215.219.221/v1/api?CID=FvJQmgtz61QFTK1AlhhH&action=list_accounts
2020/01/28 15:29:26 [INFO] Found Aviatrix Account tf-acc-aws-q6mvb
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:26 [TRACE] EvalWriteState: writing current state object for aviatrix_account.test_acc_aws
2020/01/28 15:29:26 [TRACE] [walkRefresh] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:26 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:26 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:26 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/01/28 15:29:26 [TRACE] NodeRefreshableManagedResourceInstance: aviatrix_gateway.test_gw_aws will be refreshed
2020/01/28 15:29:26 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:29:26 [TRACE] [walkRefresh] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:26 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:26 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway.test_gw_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:26 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:26 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/01/28 15:29:26 [TRACE] GRPCProvider: ReadResource
2020/01/28 15:29:26 [TRACE] GET https://54.215.219.221/v1/api?CID=FvJQmgtz61QFTK1AlhhH&action=list_vpcs_summary
2020/01/28 15:29:27 [TRACE] reading gateway tfg-aws-q6mvb: &goaviatrix.Gateway{AccountName:"tf-acc-aws-q6mvb", Action:"", AdditionalCidrs:"", AuthMethod:"None", AllocateNewEip:"", AllocateNewEipRead:true, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"disabled", ClientCertSharing:"disabled", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"i-0b7e4fd366beff513", ConnectedTransit:"no", DirectInternet:"yes", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"disable", EnableClientCertSharing:"", EnableElb:"", EnableLdap:"", EnableLdapRead:false, EnableVpcDnsServer:"Disabled", DnsServer:"", PublicDnsServer:"8.8.8.8", EnableNat:"no", SingleAZ:"no", EnableHybridConnection:false, EnablePbr:"", Expiration:"2021-05-02", GatewayZone:"us-west-1c", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"sg-066cf6437cf8568e9", GwSize:"t2.micro", GwSubnetID:"subnet-214f5646", PeeringHASubnet:"", NewZone:"", InsaneMode:"no", InstState:"", IntraVMRoute:"", IsHagw:"no", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"Lic-1578530546.14", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"no", PbrLogging:"", PbrSubnet:"", PrivateIP:"172.31.25.214", PublicIP:"13.52.175.182", SamlEnabled:"no", SandboxIP:"13.52.175.182", SaveTemplate:"", SearchDomains:"", SplitTunnel:"", SpokeVpc:"no", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"N/A", VendorName:"AWS", VpcID:"vpc-727c5215~~test-vpc", VpcNet:"172.31.16.0/20", VpcRegion:"us-west-1", VpcSplunkIPPort:"", VpcState:"waiting", VpcType:"vpc_legacy", VpnCidr:"", VpnStatus:"disabled", Zone:"", VpcSize:"", DMZEnabled:"", EnableActiveMesh:"no", EnableVpnNat:false, EnableDesignatedGateway:"No", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string{}, FilteredSpokeVpcRoutes:[]string{}, AdvertisedSpokeRoutes:[]string{}, IncludeCidrList:[]string{}, ExcludeCidrList:[]string{}}
2020/01/28 15:29:27 [TRACE] GET https://54.215.219.221/v1/api?CID=FvJQmgtz61QFTK1AlhhH&action=list_vpc_by_name&vpc_name=tfg-aws-q6mvb
2020/01/28 15:29:27 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:27 [TRACE] POST https://54.215.219.221/v1/api Body: CID=FvJQmgtz61QFTK1AlhhH&action=list_resource_tags&cloud_type=1&resource_name=tfg-aws-q6mvb&resource_type=gw
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:27 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] [walkRefresh] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:27 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodeRefreshableManagedResourceInstance)
2020/01/28 15:29:27 [TRACE] NodeRefreshableManagedResourceInstance: aviatrix_gateway_dnat.test will be refreshed
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:29:27 [TRACE] [walkRefresh] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:27 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway_dnat.test is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:27 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalRefresh
2020/01/28 15:29:27 [TRACE] GRPCProvider: ReadResource
2020/01/28 15:29:27 [TRACE] GET https://54.215.219.221/v1/api?CID=FvJQmgtz61QFTK1AlhhH&action=list_vpcs_summary
2020/01/28 15:29:27 [TRACE] reading gateway tfg-aws-q6mvb: &goaviatrix.Gateway{AccountName:"tf-acc-aws-q6mvb", Action:"", AdditionalCidrs:"", AuthMethod:"None", AllocateNewEip:"", AllocateNewEipRead:true, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"disabled", ClientCertSharing:"disabled", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"i-0b7e4fd366beff513", ConnectedTransit:"no", DirectInternet:"yes", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"disable", EnableClientCertSharing:"", EnableElb:"", EnableLdap:"", EnableLdapRead:false, EnableVpcDnsServer:"Disabled", DnsServer:"", PublicDnsServer:"8.8.8.8", EnableNat:"no", SingleAZ:"no", EnableHybridConnection:false, EnablePbr:"", Expiration:"2021-05-02", GatewayZone:"us-west-1c", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"sg-066cf6437cf8568e9", GwSize:"t2.micro", GwSubnetID:"subnet-214f5646", PeeringHASubnet:"", NewZone:"", InsaneMode:"no", InstState:"", IntraVMRoute:"", IsHagw:"no", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"Lic-1578530546.14", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"no", PbrLogging:"", PbrSubnet:"", PrivateIP:"172.31.25.214", PublicIP:"13.52.175.182", SamlEnabled:"no", SandboxIP:"13.52.175.182", SaveTemplate:"", SearchDomains:"", SplitTunnel:"", SpokeVpc:"no", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"N/A", VendorName:"AWS", VpcID:"vpc-727c5215~~test-vpc", VpcNet:"172.31.16.0/20", VpcRegion:"us-west-1", VpcSplunkIPPort:"", VpcState:"waiting", VpcType:"vpc_legacy", VpnCidr:"", VpnStatus:"disabled", Zone:"", VpcSize:"", DMZEnabled:"", EnableActiveMesh:"no", EnableVpnNat:false, EnableDesignatedGateway:"No", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string{}, FilteredSpokeVpcRoutes:[]string{}, AdvertisedSpokeRoutes:[]string{}, IncludeCidrList:[]string{}, ExcludeCidrList:[]string{}}
2020/01/28 15:29:27 [TRACE] GET https://54.215.219.221/v1/api?CID=FvJQmgtz61QFTK1AlhhH&action=list_vpc_by_name&vpc_name=tfg-aws-q6mvb
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:27 [TRACE] EvalWriteState: writing current state object for aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] [walkRefresh] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:27 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:29:27 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:29:27 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:29:27 [TRACE] [walkRefresh] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:29:27 [TRACE] GRPCProvider: Close
2020/01/28 15:29:27 [DEBUG] provider has no plugin.Client
2020/01/28 15:29:27 [TRACE] [walkRefresh] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:29:27 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:29:27 [DEBUG] New state was assigned lineage "89b685f6-e7c0-db1d-6615-22990708a719"
2020/01/28 15:29:27 [INFO] terraform: building graph: GraphTypePlanDestroy
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:29:27 [TRACE] StateTransformer: creating nodes for both current and deposed instance objects
2020/01/28 15:29:27 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for aviatrix_account.test_acc_aws current object
2020/01/28 15:29:27 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for aviatrix_gateway.test_gw_aws current object
2020/01/28 15:29:27 [TRACE] StateTransformer: added *terraform.NodePlanDestroyableResourceInstance for aviatrix_gateway_dnat.test current object
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.StateTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlanDestroyableResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodePlanDestroyableResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodePlanDestroyableResourceInstance
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlanDestroyableResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodePlanDestroyableResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodePlanDestroyableResourceInstance
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:27 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlanDestroyableResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodePlanDestroyableResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodePlanDestroyableResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodePlanDestroyableResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodePlanDestroyableResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodePlanDestroyableResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodePlanDestroyableResourceInstance) destroys aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodePlanDestroyableResourceInstance) destroys aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodePlanDestroyableResourceInstance) destroys aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: constructing temporary graph for analysis of references, starting from:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.LocalTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.OutputTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.AttachResourceConfigTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.AttachStateTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.RootVariableTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.ModuleVariableTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.graphTransformerMulti on temporary graph
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:27 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.AttachSchemaTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.ReferenceTransformer on temporary graph
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws aviatrix_account.test_acc_aws]
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws aviatrix_gateway.test_gw_aws]
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: temporary reference graph:
aviatrix_account.test_acc_aws
  provider.aviatrix
aviatrix_account.test_acc_aws (destroy)
  provider.aviatrix
aviatrix_gateway.test_gw_aws
  aviatrix_account.test_acc_aws
  provider.aviatrix
aviatrix_gateway.test_gw_aws (destroy)
  provider.aviatrix
aviatrix_gateway_dnat.test
  aviatrix_gateway.test_gw_aws
  provider.aviatrix
aviatrix_gateway_dnat.test (destroy)
  provider.aviatrix
provider.aviatrix
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_gateway_dnat.test" references [provider.aviatrix aviatrix_account.test_acc_aws aviatrix_gateway.test_gw_aws]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: destruction of "aviatrix_account.test_acc_aws" depends on aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: destruction of "aviatrix_gateway.test_gw_aws" depends on aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_account.test_acc_aws" depends on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_gateway.test_gw_aws" depends on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_gateway_dnat.test (destroy)" references [provider.aviatrix]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_account.test_acc_aws" references [provider.aviatrix]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_account.test_acc_aws (destroy)" references [provider.aviatrix]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_gateway.test_gw_aws" references [aviatrix_account.test_acc_aws provider.aviatrix]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: destruction of "aviatrix_account.test_acc_aws" depends on aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_account.test_acc_aws" depends on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_gateway.test_gw_aws (destroy)" references [provider.aviatrix]
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodePlanDestroyableResourceInstance
  aviatrix_gateway.test_gw_aws - *terraform.NodePlanDestroyableResourceInstance
  aviatrix_gateway_dnat.test - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodePlanDestroyableResourceInstance
  aviatrix_gateway_dnat.test - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodePlanDestroyableResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/01/28 15:29:27 [DEBUG] Starting graph walk: walkPlanDestroy
2020/01/28 15:29:27 [TRACE] dag/walk: updating graph
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "provider.aviatrix"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "provider.aviatrix"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test" waiting on "provider.aviatrix"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws" waiting on "aviatrix_gateway_dnat.test"
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:29:27 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:29:27 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:29:27 [TRACE] [walkPlanDestroy] Entering eval tree: provider.aviatrix
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:29:27 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:29:27 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:27 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:27 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:27 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:27 [TRACE] [walkPlanDestroy] Exiting eval tree: provider.aviatrix
2020/01/28 15:29:27 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:29:27 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test"
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway_dnat.test": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway_dnat.test": evaluating
2020/01/28 15:29:27 [TRACE] [walkPlanDestroy] Entering eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:27 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway_dnat.test is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:27 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:27 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalDiffDestroy
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:27 [TRACE] EvalWriteDiff: recorded Delete change for aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] [walkPlanDestroy] Exiting eval tree: aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway_dnat.test": visit complete
2020/01/28 15:29:27 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws"
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway.test_gw_aws": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway.test_gw_aws": evaluating
2020/01/28 15:29:27 [TRACE] [walkPlanDestroy] Entering eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:27 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway.test_gw_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:27 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalDiffDestroy
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:27 [TRACE] EvalWriteDiff: recorded Delete change for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] [walkPlanDestroy] Exiting eval tree: aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_gateway.test_gw_aws": visit complete
2020/01/28 15:29:27 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws"
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_account.test_acc_aws": starting visit (*terraform.NodePlanDestroyableResourceInstance)
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_account.test_acc_aws": evaluating
2020/01/28 15:29:27 [TRACE] [walkPlanDestroy] Entering eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:27 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] UpgradeResourceState: schema version of aviatrix_account.test_acc_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:27 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalDiffDestroy
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/01/28 15:29:27 [TRACE] EvalWriteDiff: recorded Delete change for aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] [walkPlanDestroy] Exiting eval tree: aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] vertex "aviatrix_account.test_acc_aws": visit complete
2020/01/28 15:29:27 [WARN] Test: Step plan: DIFF:

DESTROY: aviatrix_account.test_acc_aws
  account_name:       "tf-acc-aws-q6mvb" => ""
  aws_access_key:     "AKIAIQP4GPY45NA4NIAA" => ""
  aws_account_number: "830104897336" => ""
  aws_iam:            "false" => ""
  aws_secret_key:     "/4dSGsN5TYshwwnmxQr28aBDi3QO7jUVBWMYN8E5" => ""
  cloud_type:         "1" => ""
  id:                 "tf-acc-aws-q6mvb" => ""
DESTROY: aviatrix_gateway.test_gw_aws
  account_name:                        "tf-acc-aws-q6mvb" => ""
  additional_cidrs:                    "" => ""
  additional_cidrs_designated_gateway: "" => ""
  allocate_new_eip:                    "true" => ""
  backup_public_ip:                    "" => ""
  cloud_instance_id:                   "i-0b7e4fd366beff513" => ""
  cloud_type:                          "1" => ""
  cloudn_bkup_gateway_inst_id:         "" => ""
  duo_api_hostname:                    "" => ""
  duo_integration_key:                 "" => ""
  duo_push_mode:                       "" => ""
  eip:                                 "13.52.175.182" => ""
  elb_name:                            "" => ""
  enable_designated_gateway:           "false" => ""
  enable_elb:                          "false" => ""
  enable_encrypt_volume:               "false" => ""
  enable_ldap:                         "false" => ""
  enable_vpc_dns_server:               "false" => ""
  enable_vpn_nat:                      "true" => ""
  gw_name:                             "tfg-aws-q6mvb" => ""
  gw_size:                             "t2.micro" => ""
  id:                                  "tfg-aws-q6mvb" => ""
  insane_mode:                         "false" => ""
  insane_mode_az:                      "" => ""
  ldap_base_dn:                        "" => ""
  ldap_bind_dn:                        "" => ""
  ldap_server:                         "" => ""
  ldap_username_attribute:             "" => ""
  max_vpn_conn:                        "" => ""
  name_servers:                        "" => ""
  okta_url:                            "" => ""
  okta_username_suffix:                "" => ""
  otp_mode:                            "" => ""
  peering_ha_eip:                      "" => ""
  peering_ha_gw_size:                  "" => ""
  peering_ha_insane_mode_az:           "" => ""
  peering_ha_subnet:                   "" => ""
  peering_ha_zone:                     "" => ""
  public_dns_server:                   "8.8.8.8" => ""
  public_ip:                           "13.52.175.182" => ""
  saml_enabled:                        "false" => ""
  search_domains:                      "" => ""
  security_group_id:                   "sg-066cf6437cf8568e9" => ""
  single_az_ha:                        "false" => ""
  single_ip_snat:                      "false" => ""
  split_tunnel:                        "true" => ""
  subnet:                              "172.31.16.0/20" => ""
  tag_list.#:                          "0" => ""
  vpc_id:                              "vpc-727c5215" => ""
  vpc_reg:                             "us-west-1" => ""
  vpn_access:                          "false" => ""
  vpn_cidr:                            "" => ""
DESTROY: aviatrix_gateway_dnat.test
  dnat_policy.#:             "1" => ""
  dnat_policy.0.connection:  "None" => ""
  dnat_policy.0.dnat_ips:    "175.32.12.12" => ""
  dnat_policy.0.dnat_port:   "12" => ""
  dnat_policy.0.dst_cidr:    "14.0.0.0/16" => ""
  dnat_policy.0.dst_port:    "222" => ""
  dnat_policy.0.exclude_rtb: "" => ""
  dnat_policy.0.interface:   "eth0" => ""
  dnat_policy.0.mark:        "22" => ""
  dnat_policy.0.protocol:    "tcp" => ""
  dnat_policy.0.src_cidr:    "13.0.0.0/16" => ""
  dnat_policy.0.src_port:    "22" => ""
  gw_name:                   "tfg-aws-q6mvb" => ""
  id:                        "tfg-aws-q6mvb" => ""



STATE:

aviatrix_account.test_acc_aws:
  ID = tf-acc-aws-q6mvb
  provider = provider.aviatrix
  account_name = tf-acc-aws-q6mvb
  aws_access_key = AKIAIQP4GPY45NA4NIAA
  aws_account_number = 830104897336
  aws_iam = false
  aws_secret_key = /4dSGsN5TYshwwnmxQr28aBDi3QO7jUVBWMYN8E5
  cloud_type = 1
aviatrix_gateway.test_gw_aws:
  ID = tfg-aws-q6mvb
  provider = provider.aviatrix
  account_name = tf-acc-aws-q6mvb
  additional_cidrs = 
  additional_cidrs_designated_gateway = 
  allocate_new_eip = true
  backup_public_ip = 
  cloud_instance_id = i-0b7e4fd366beff513
  cloud_type = 1
  cloudn_bkup_gateway_inst_id = 
  duo_api_hostname = 
  duo_integration_key = 
  duo_push_mode = 
  eip = 13.52.175.182
  elb_name = 
  enable_designated_gateway = false
  enable_elb = false
  enable_encrypt_volume = false
  enable_ldap = false
  enable_vpc_dns_server = false
  enable_vpn_nat = true
  gw_name = tfg-aws-q6mvb
  gw_size = t2.micro
  insane_mode = false
  insane_mode_az = 
  ldap_base_dn = 
  ldap_bind_dn = 
  ldap_server = 
  ldap_username_attribute = 
  max_vpn_conn = 
  name_servers = 
  okta_url = 
  okta_username_suffix = 
  otp_mode = 
  peering_ha_eip = 
  peering_ha_gw_size = 
  peering_ha_insane_mode_az = 
  peering_ha_subnet = 
  peering_ha_zone = 
  public_dns_server = 8.8.8.8
  public_ip = 13.52.175.182
  saml_enabled = false
  search_domains = 
  security_group_id = sg-066cf6437cf8568e9
  single_az_ha = false
  single_ip_snat = false
  split_tunnel = true
  subnet = 172.31.16.0/20
  vpc_id = vpc-727c5215
  vpc_reg = us-west-1
  vpn_access = false
  vpn_cidr = 

  Dependencies:
    aviatrix_account.test_acc_aws
aviatrix_gateway_dnat.test:
  ID = tfg-aws-q6mvb
  provider = provider.aviatrix
  dnat_policy.# = 1
  dnat_policy.0.connection = None
  dnat_policy.0.dnat_ips = 175.32.12.12
  dnat_policy.0.dnat_port = 12
  dnat_policy.0.dst_cidr = 14.0.0.0/16
  dnat_policy.0.dst_port = 222
  dnat_policy.0.exclude_rtb = 
  dnat_policy.0.interface = eth0
  dnat_policy.0.mark = 22
  dnat_policy.0.protocol = tcp
  dnat_policy.0.src_cidr = 13.0.0.0/16
  dnat_policy.0.src_port = 22
  gw_name = tfg-aws-q6mvb

  Dependencies:
    aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [INFO] terraform: building graph: GraphTypeApply
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:29:27 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/01/28 15:29:27 [TRACE] DiffTransformer starting
2020/01/28 15:29:27 [TRACE] DiffTransformer: found Delete change for aviatrix_gateway_dnat.test 
2020/01/28 15:29:27 [TRACE] DiffTransformer: aviatrix_gateway_dnat.test will be represented for destruction by aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:27 [TRACE] DiffTransformer: found Delete change for aviatrix_gateway.test_gw_aws 
2020/01/28 15:29:27 [TRACE] DiffTransformer: aviatrix_gateway.test_gw_aws will be represented for destruction by aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [TRACE] DiffTransformer: found Delete change for aviatrix_account.test_acc_aws 
2020/01/28 15:29:27 [TRACE] DiffTransformer: aviatrix_account.test_acc_aws will be represented for destruction by aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [TRACE] DiffTransformer complete
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/01/28 15:29:27 [TRACE] OrphanResourceTransformer: adding whole-resource orphan node for aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] OrphanResourceTransformer: node "aviatrix_account.test_acc_aws (clean up state)" depends on "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:27 [TRACE] OrphanResourceTransformer: adding whole-resource orphan node for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] OrphanResourceTransformer: node "aviatrix_gateway.test_gw_aws (clean up state)" depends on "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:27 [TRACE] OrphanResourceTransformer: adding whole-resource orphan node for aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] OrphanResourceTransformer: node "aviatrix_gateway_dnat.test (clean up state)" depends on "aviatrix_gateway_dnat.test (destroy)"
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_gateway_dnat.test (destroy)" (*terraform.NodeDestroyResourceInstance) destroys aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_gateway.test_gw_aws (destroy)" (*terraform.NodeDestroyResourceInstance) destroys aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_account.test_acc_aws (destroy)" (*terraform.NodeDestroyResourceInstance) destroys aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: constructing temporary graph for analysis of references, starting from:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.LocalTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.OutputTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.AttachResourceConfigTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.AttachStateTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.RootVariableTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.ModuleVariableTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.graphTransformerMulti on temporary graph
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:27 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test" (*terraform.NodeAbstractResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test - *terraform.NodeAbstractResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.AttachSchemaTransformer on temporary graph
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: running *terraform.ReferenceTransformer on temporary graph
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test" references: [aviatrix_gateway.test_gw_aws aviatrix_gateway.test_gw_aws]
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws" references: [aviatrix_account.test_acc_aws aviatrix_account.test_acc_aws]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: temporary reference graph:
aviatrix_account.test_acc_aws
  provider.aviatrix
aviatrix_account.test_acc_aws (destroy)
  provider.aviatrix
aviatrix_gateway.test_gw_aws
  aviatrix_account.test_acc_aws
  provider.aviatrix
aviatrix_gateway.test_gw_aws (destroy)
  provider.aviatrix
aviatrix_gateway_dnat.test
  aviatrix_gateway.test_gw_aws
  provider.aviatrix
aviatrix_gateway_dnat.test (destroy)
  provider.aviatrix
provider.aviatrix
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_gateway_dnat.test" references [aviatrix_gateway.test_gw_aws provider.aviatrix aviatrix_account.test_acc_aws]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: destruction of "aviatrix_gateway.test_gw_aws" depends on aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: destruction of "aviatrix_account.test_acc_aws" depends on aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_gateway.test_gw_aws (destroy)" depends on "aviatrix_gateway_dnat.test (destroy)"
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_account.test_acc_aws (destroy)" depends on "aviatrix_gateway_dnat.test (destroy)"
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_gateway_dnat.test (destroy)" references [provider.aviatrix]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_gateway.test_gw_aws" references [aviatrix_account.test_acc_aws provider.aviatrix]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: destruction of "aviatrix_account.test_acc_aws" depends on aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: "aviatrix_account.test_acc_aws (destroy)" depends on "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_gateway.test_gw_aws (destroy)" references [provider.aviatrix]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_account.test_acc_aws" references [provider.aviatrix]
2020/01/28 15:29:27 [TRACE] DestroyEdgeTransformer: creation node "aviatrix_account.test_acc_aws (destroy)" references [provider.aviatrix]
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:29:27 [DEBUG] adding implicit provider configuration provider.aviatrix, implied first by aviatrix_account.test_acc_aws (clean up state)
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_account.test_acc_aws (clean up state) is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway.test_gw_aws (clean up state) is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test (clean up state) is provided by provider.aviatrix or inherited equivalent
2020/01/28 15:29:27 [TRACE] ProviderTransformer: aviatrix_gateway_dnat.test (destroy) is provided by provider.aviatrix exactly
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws (clean up state)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws (clean up state)" (*terraform.NodeDestroyResource) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws (clean up state)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws (clean up state)" (*terraform.NodeDestroyResource) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test (clean up state)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test (clean up state)" (*terraform.NodeDestroyResource) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway_dnat.test (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_gateway.test_gw_aws (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] ProviderTransformer: exact match for provider.aviatrix serving aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [DEBUG] ProviderTransformer: "aviatrix_account.test_acc_aws (destroy)" (*terraform.NodeDestroyResourceInstance) needs provider.aviatrix
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_account.test_acc_aws (clean up state)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway.test_gw_aws (clean up state)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching resource schema to aviatrix_gateway_dnat.test (clean up state)
2020/01/28 15:29:27 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.aviatrix
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws (destroy)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_account.test_acc_aws (clean up state)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway.test_gw_aws (clean up state)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "aviatrix_gateway_dnat.test (clean up state)" references: []
2020/01/28 15:29:27 [DEBUG] ReferenceTransformer: "provider.aviatrix" references: []
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.DestroyValueReferenceTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.DestroyValueReferenceTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.DestroyOutputTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.DestroyOutputTransformer (no changes)
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/01/28 15:29:27 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:29:27 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:29:27 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_account.test_acc_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway.test_gw_aws (destroy) - *terraform.NodeDestroyResourceInstance
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
aviatrix_gateway_dnat.test (destroy) - *terraform.NodeDestroyResourceInstance
  provider.aviatrix - *terraform.NodeApplyableProvider
meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
provider.aviatrix - *terraform.NodeApplyableProvider
provider.aviatrix (close) - *terraform.graphNodeCloseProvider
  aviatrix_account.test_acc_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway.test_gw_aws (clean up state) - *terraform.NodeDestroyResource
  aviatrix_gateway_dnat.test (clean up state) - *terraform.NodeDestroyResource
root - terraform.graphNodeRoot
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
  provider.aviatrix (close) - *terraform.graphNodeCloseProvider
------
2020/01/28 15:29:27 [DEBUG] Starting graph walk: walkDestroy
2020/01/28 15:29:27 [TRACE] dag/walk: updating graph
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "provider.aviatrix (close)"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "provider.aviatrix"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test (destroy)"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added new vertex: "aviatrix_gateway_dnat.test (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws (clean up state)" waiting on "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_account.test_acc_aws (destroy)" waiting on "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws (clean up state)" waiting on "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_gateway_dnat.test (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test (clean up state)" waiting on "aviatrix_gateway_dnat.test (destroy)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "root" waiting on "provider.aviatrix (close)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway_dnat.test (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "provider.aviatrix (close)" waiting on "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_gateway.test_gw_aws (destroy)" waiting on "aviatrix_gateway_dnat.test (destroy)"
2020/01/28 15:29:27 [TRACE] dag/walk: added edge: "aviatrix_gateway_dnat.test (destroy)" waiting on "provider.aviatrix"
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "provider.aviatrix (close)", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws (destroy)", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test (destroy)", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws (destroy)", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway.test_gw_aws (clean up state)", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_gateway_dnat.test (clean up state)", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "aviatrix_account.test_acc_aws (clean up state)", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/01/28 15:29:27 [TRACE] dag/walk: visiting "provider.aviatrix"
2020/01/28 15:29:27 [TRACE] vertex "provider.aviatrix": starting visit (*terraform.NodeApplyableProvider)
2020/01/28 15:29:27 [TRACE] vertex "provider.aviatrix": evaluating
2020/01/28 15:29:27 [TRACE] [walkDestroy] Entering eval tree: provider.aviatrix
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020/01/28 15:29:27 [TRACE] BuiltinEvalContext: Initialized "aviatrix" provider for provider.aviatrix
2020/01/28 15:29:27 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:27 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:27 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/01/28 15:29:27 [TRACE] buildProviderConfig for provider.aviatrix: no configuration at all
2020/01/28 15:29:27 [TRACE] GRPCProvider: GetSchema
2020/01/28 15:29:27 [TRACE] GRPCProvider: Configure
2020/01/28 15:29:27 [INFO] Parsed Aviatrix login: "admin"
2020/01/28 15:29:27 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:27 [TRACE] POST https://54.215.219.221/v1/api Body: action=login&password=Aviatrix123%23&username=admin
2020/01/28 15:29:28 [TRACE] CID is 'lSwfA8MG5ZqT0A8WYvqq'.
2020/01/28 15:29:28 [INFO] Aviatrix Client configured for use
2020/01/28 15:29:28 [TRACE] GET https://54.215.219.221/v1/api?CID=lSwfA8MG5ZqT0A8WYvqq&action=list_version_info
2020/01/28 15:29:28 [TRACE] [walkDestroy] Exiting eval tree: provider.aviatrix
2020/01/28 15:29:28 [TRACE] vertex "provider.aviatrix": visit complete
2020/01/28 15:29:28 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test (destroy)"
2020/01/28 15:29:28 [TRACE] vertex "aviatrix_gateway_dnat.test (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2020/01/28 15:29:28 [TRACE] vertex "aviatrix_gateway_dnat.test (destroy)": evaluating
2020/01/28 15:29:28 [TRACE] [walkDestroy] Entering eval tree: aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:29:28 [TRACE] EvalReadDiff: Read Delete change from plan for aviatrix_gateway_dnat.test
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:28 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:28 [TRACE] EvalReadState: reading state for aviatrix_gateway_dnat.test
2020/01/28 15:29:28 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway_dnat.test is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:28 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalRequireState
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:28 [TRACE] <root>: eval: *terraform.EvalApply
2020/01/28 15:29:28 [DEBUG] aviatrix_gateway_dnat.test: applying the planned Delete change
2020/01/28 15:29:28 [TRACE] GRPCProvider: ApplyResourceChange
2020/01/28 15:29:28 [TRACE] POST https://54.215.219.221/v1/api
2020/01/28 15:29:28 [TRACE] POST https://54.215.219.221/v1/api Body: AdvertisedSpokeRoutes=&AllocateNewEipRead=&CID=lSwfA8MG5ZqT0A8WYvqq&ConnectedTransit=&CustomizedSpokeVpcRoutes=&DMZEnabled=&DnatPolicy=&EnableEncryptVolume=&EnableHybridConnection=&EnableLdapRead=&EnableVpcDnsServer=&ExcludeCidrList=&FilteredSpokeVpcRoutes=&IncludeCidrList=&SnatPolicy=&SpokeVpc=&action=update_dnat_config&gateway_name=tfg-aws-q6mvb&policy_list=%5B%5D
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:30 [TRACE] EvalWriteState: removing state object for aviatrix_gateway_dnat.test
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/01/28 15:29:30 [TRACE] [walkDestroy] Exiting eval tree: aviatrix_gateway_dnat.test (destroy)
2020/01/28 15:29:30 [TRACE] vertex "aviatrix_gateway_dnat.test (destroy)": visit complete
2020/01/28 15:29:30 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:30 [TRACE] vertex "aviatrix_gateway.test_gw_aws (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2020/01/28 15:29:30 [TRACE] vertex "aviatrix_gateway.test_gw_aws (destroy)": evaluating
2020/01/28 15:29:30 [TRACE] dag/walk: visiting "aviatrix_gateway_dnat.test (clean up state)"
2020/01/28 15:29:30 [TRACE] [walkDestroy] Entering eval tree: aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:30 [TRACE] vertex "aviatrix_gateway_dnat.test (clean up state)": starting visit (*terraform.NodeDestroyResource)
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:29:30 [TRACE] vertex "aviatrix_gateway_dnat.test (clean up state)": evaluating
2020/01/28 15:29:30 [TRACE] [walkDestroy] Entering eval tree: aviatrix_gateway_dnat.test (clean up state)
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalForgetResourceState
2020/01/28 15:29:30 [TRACE] EvalForgetResourceState: Pruned husk of aviatrix_gateway_dnat.test from state
2020/01/28 15:29:30 [TRACE] [walkDestroy] Exiting eval tree: aviatrix_gateway_dnat.test (clean up state)
2020/01/28 15:29:30 [TRACE] vertex "aviatrix_gateway_dnat.test (clean up state)": visit complete
2020/01/28 15:29:30 [TRACE] EvalReadDiff: Read Delete change from plan for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:30 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:30 [TRACE] EvalReadState: reading state for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:30 [TRACE] UpgradeResourceState: schema version of aviatrix_gateway.test_gw_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:30 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalRequireState
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:30 [TRACE] <root>: eval: *terraform.EvalApply
2020/01/28 15:29:30 [DEBUG] aviatrix_gateway.test_gw_aws: applying the planned Delete change
2020/01/28 15:29:30 [TRACE] GRPCProvider: ApplyResourceChange
2020/01/28 15:29:30 [INFO] Deleting Aviatrix gateway: &goaviatrix.Gateway{AccountName:"", Action:"", AdditionalCidrs:"", AuthMethod:"", AllocateNewEip:"", AllocateNewEipRead:false, BkupGatewayZone:"", BkupPrivateIP:"", CID:"", CIDR:"", ClientCertAuth:"", ClientCertSharing:"", CloudType:1, CloudnBkupGatewayInstID:"", CloudnGatewayInstID:"", ConnectedTransit:"", DirectInternet:"", DockerConsulIP:"", DockerNtwkCidr:"", DockerNtwkName:"", DuoAPIHostname:"", DuoIntegrationKey:"", DuoPushMode:"", DuoSecretKey:"", Eip:"", ElbDNSName:"", ElbName:"", ElbState:"", EnableClientCertSharing:"", EnableElb:"", EnableLdap:"", EnableLdapRead:false, EnableVpcDnsServer:"", DnsServer:"", PublicDnsServer:"", EnableNat:"", SingleAZ:"", EnableHybridConnection:false, EnablePbr:"", Expiration:"", GatewayZone:"", GwName:"tfg-aws-q6mvb", GwSecurityGroupID:"", GwSize:"", GwSubnetID:"", PeeringHASubnet:"", NewZone:"", InsaneMode:"", InstState:"", IntraVMRoute:"", IsHagw:"", LdapAdditionalReq:"", LdapBaseDn:"", LdapBindDn:"", LdapCaCert:"", LdapClientCert:"", LdapPassword:"", LdapServer:"", LdapUseSsl:"", LdapUserAttr:"", LicenseID:"", MaxConn:"", NameServers:"", OktaToken:"", OktaURL:"", OktaUsernameSuffix:"", OtpMode:"", PbrDefaultGateway:"", PbrEnabled:"", PbrLogging:"", PbrSubnet:"", PrivateIP:"", PublicIP:"", SamlEnabled:"", SandboxIP:"", SaveTemplate:"", SearchDomains:"", SplitTunnel:"", SpokeVpc:"", TagList:"", TransitGwName:"", TunnelName:"", TunnelType:"", VendorName:"", VpcID:"", VpcNet:"", VpcRegion:"", VpcSplunkIPPort:"", VpcState:"", VpcType:"", VpnCidr:"", VpnStatus:"", Zone:"", VpcSize:"", DMZEnabled:"", EnableActiveMesh:"", EnableVpnNat:false, EnableDesignatedGateway:"", AdditionalCidrsDesignatedGw:"", EnableEncryptVolume:false, CustomerManagedKeys:"", SnatMode:"", SnatPolicy:[]goaviatrix.PolicyRule(nil), PolicyList:"", GatewayName:"", DnatPolicy:[]goaviatrix.PolicyRule(nil), CustomizedSpokeVpcRoutes:[]string(nil), FilteredSpokeVpcRoutes:[]string(nil), AdvertisedSpokeRoutes:[]string(nil), IncludeCidrList:[]string(nil), ExcludeCidrList:[]string(nil)}
2020/01/28 15:29:30 [TRACE] GET https://54.215.219.221/v1/api?action=delete_container&CID=lSwfA8MG5ZqT0A8WYvqq&cloud_type=1&gw_name=tfg-aws-q6mvb
2020/01/28 15:29:32 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (clean up state)" is waiting for "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:32 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (destroy)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:32 [TRACE] dag/walk: vertex "root" is waiting for "provider.aviatrix (close)"
2020/01/28 15:29:32 [TRACE] dag/walk: vertex "aviatrix_gateway.test_gw_aws (clean up state)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:32 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:35 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:37 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (clean up state)" is waiting for "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:37 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (destroy)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:37 [TRACE] dag/walk: vertex "root" is waiting for "provider.aviatrix (close)"
2020/01/28 15:29:37 [TRACE] dag/walk: vertex "aviatrix_gateway.test_gw_aws (clean up state)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:37 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:40 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:42 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (clean up state)" is waiting for "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:42 [TRACE] dag/walk: vertex "root" is waiting for "provider.aviatrix (close)"
2020/01/28 15:29:42 [TRACE] dag/walk: vertex "aviatrix_gateway.test_gw_aws (clean up state)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:42 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:42 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (destroy)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:45 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:47 [TRACE] dag/walk: vertex "root" is waiting for "provider.aviatrix (close)"
2020/01/28 15:29:47 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (clean up state)" is waiting for "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:47 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:47 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (destroy)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:47 [TRACE] dag/walk: vertex "aviatrix_gateway.test_gw_aws (clean up state)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:50 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:52 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (clean up state)" is waiting for "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:52 [TRACE] dag/walk: vertex "root" is waiting for "provider.aviatrix (close)"
2020/01/28 15:29:52 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:52 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (destroy)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:52 [TRACE] dag/walk: vertex "aviatrix_gateway.test_gw_aws (clean up state)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:55 [TRACE] dag/walk: vertex "provider.aviatrix (close)" is waiting for "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:57 [TRACE] dag/walk: vertex "meta.count-boundary (EachMode fixup)" is waiting for "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:29:57 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (destroy)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:57 [TRACE] dag/walk: vertex "aviatrix_gateway.test_gw_aws (clean up state)" is waiting for "aviatrix_gateway.test_gw_aws (destroy)"
2020/01/28 15:29:57 [TRACE] dag/walk: vertex "root" is waiting for "provider.aviatrix (close)"
2020/01/28 15:29:57 [TRACE] dag/walk: vertex "aviatrix_account.test_acc_aws (clean up state)" is waiting for "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:29:58 [TRACE] EvalWriteState: removing state object for aviatrix_gateway.test_gw_aws
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/01/28 15:29:58 [TRACE] [walkDestroy] Exiting eval tree: aviatrix_gateway.test_gw_aws (destroy)
2020/01/28 15:29:58 [TRACE] vertex "aviatrix_gateway.test_gw_aws (destroy)": visit complete
2020/01/28 15:29:58 [TRACE] dag/walk: visiting "aviatrix_gateway.test_gw_aws (clean up state)"
2020/01/28 15:29:58 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws (destroy)"
2020/01/28 15:29:58 [TRACE] vertex "aviatrix_account.test_acc_aws (destroy)": starting visit (*terraform.NodeDestroyResourceInstance)
2020/01/28 15:29:58 [TRACE] vertex "aviatrix_account.test_acc_aws (destroy)": evaluating
2020/01/28 15:29:58 [TRACE] vertex "aviatrix_gateway.test_gw_aws (clean up state)": starting visit (*terraform.NodeDestroyResource)
2020/01/28 15:29:58 [TRACE] vertex "aviatrix_gateway.test_gw_aws (clean up state)": evaluating
2020/01/28 15:29:58 [TRACE] [walkDestroy] Entering eval tree: aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/01/28 15:29:58 [TRACE] [walkDestroy] Entering eval tree: aviatrix_gateway.test_gw_aws (clean up state)
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalForgetResourceState
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalSequence
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/01/28 15:29:58 [TRACE] EvalForgetResourceState: Pruned husk of aviatrix_gateway.test_gw_aws from state
2020/01/28 15:29:58 [TRACE] [walkDestroy] Exiting eval tree: aviatrix_gateway.test_gw_aws (clean up state)
2020/01/28 15:29:58 [TRACE] vertex "aviatrix_gateway.test_gw_aws (clean up state)": visit complete
2020/01/28 15:29:58 [TRACE] EvalReadDiff: Read Delete change from plan for aviatrix_account.test_acc_aws
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:58 [TRACE] <root>: eval: terraform.EvalNoop
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalReadState
2020/01/28 15:29:58 [TRACE] EvalReadState: reading state for aviatrix_account.test_acc_aws
2020/01/28 15:29:58 [TRACE] UpgradeResourceState: schema version of aviatrix_account.test_acc_aws is still 0; calling provider "aviatrix" for any other minor fixups
2020/01/28 15:29:58 [TRACE] GRPCProvider: UpgradeResourceState
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalRequireState
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalIf
2020/01/28 15:29:58 [TRACE] <root>: eval: *terraform.EvalApply
2020/01/28 15:29:58 [DEBUG] aviatrix_account.test_acc_aws: applying the planned Delete change
2020/01/28 15:29:58 [TRACE] GRPCProvider: ApplyResourceChange
2020/01/28 15:29:58 [INFO] Deleting Aviatrix account: &goaviatrix.Account{CID:"", Action:"", AccountName:"tf-acc-aws-q6mvb", CloudType:0, AwsAccountNumber:"", AwsIam:"", AwsAccessKey:"", AwsSecretKey:"", AwsRoleApp:"", AwsRoleEc2:"", AzureSubscriptionId:"", ArmSubscriptionId:"", ArmApplicationEndpoint:"", ArmApplicationClientId:"", ArmApplicationClientSecret:"", AwsgovAccountNumber:"", AwsgovAccessKey:"", AwsgovSecretKey:"", AwsgovCloudtrailBucket:"", AzurechinaSubscriptionId:"", AwschinaAccountNumber:"", AwschinaAccessKey:"", AwschinaSecretKey:"", ArmChinaSubscriptionId:"", ArmChinaApplicationEndpoint:"", ArmChinaApplicationClientId:"", ArmChinaApplicationClientSecret:"", ProjectCredentialsFilename:"", ProjectCredentialsContents:"", GcloudProjectCredentialsFilepathLocal:"", GcloudProjectCredentialsFilepathController:"", GcloudProjectName:"", OciTenancyID:"", OciUserID:"", OciCompartmentID:"", OciApiPrivateKeyFilePath:""}
2020/01/28 15:29:58 [TRACE] GET https://54.215.219.221/v1/api?action=delete_account_profile&CID=lSwfA8MG5ZqT0A8WYvqq&account_name=tf-acc-aws-q6mvb
2020/01/28 15:30:00 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/01/28 15:30:00 [TRACE] EvalWriteState: removing state object for aviatrix_account.test_acc_aws
2020/01/28 15:30:00 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/01/28 15:30:00 [TRACE] <root>: eval: *terraform.EvalUpdateStateHook
2020/01/28 15:30:00 [TRACE] [walkDestroy] Exiting eval tree: aviatrix_account.test_acc_aws (destroy)
2020/01/28 15:30:00 [TRACE] vertex "aviatrix_account.test_acc_aws (destroy)": visit complete
2020/01/28 15:30:00 [TRACE] dag/walk: visiting "aviatrix_account.test_acc_aws (clean up state)"
2020/01/28 15:30:00 [TRACE] vertex "aviatrix_account.test_acc_aws (clean up state)": starting visit (*terraform.NodeDestroyResource)
2020/01/28 15:30:00 [TRACE] vertex "aviatrix_account.test_acc_aws (clean up state)": evaluating
2020/01/28 15:30:00 [TRACE] [walkDestroy] Entering eval tree: aviatrix_account.test_acc_aws (clean up state)
2020/01/28 15:30:00 [TRACE] <root>: eval: *terraform.EvalForgetResourceState
2020/01/28 15:30:00 [TRACE] EvalForgetResourceState: Pruned husk of aviatrix_account.test_acc_aws from state
2020/01/28 15:30:00 [TRACE] [walkDestroy] Exiting eval tree: aviatrix_account.test_acc_aws (clean up state)
2020/01/28 15:30:00 [TRACE] vertex "aviatrix_account.test_acc_aws (clean up state)": visit complete
2020/01/28 15:30:00 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/01/28 15:30:00 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/01/28 15:30:00 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/01/28 15:30:00 [TRACE] [walkDestroy] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:30:00 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/01/28 15:30:00 [TRACE] dag/walk: visiting "provider.aviatrix (close)"
2020/01/28 15:30:00 [TRACE] vertex "provider.aviatrix (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/01/28 15:30:00 [TRACE] [walkDestroy] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/01/28 15:30:00 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020/01/28 15:30:00 [TRACE] vertex "provider.aviatrix (close)": evaluating
2020/01/28 15:30:00 [TRACE] [walkDestroy] Entering eval tree: provider.aviatrix (close)
2020/01/28 15:30:00 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/01/28 15:30:00 [TRACE] GRPCProvider: Close
2020/01/28 15:30:00 [DEBUG] provider has no plugin.Client
2020/01/28 15:30:00 [TRACE] [walkDestroy] Exiting eval tree: provider.aviatrix (close)
2020/01/28 15:30:00 [TRACE] vertex "provider.aviatrix (close)": visit complete
2020/01/28 15:30:00 [TRACE] dag/walk: visiting "root"
2020/01/28 15:30:00 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:30:00 [TRACE] vertex "root": visit complete
2020/01/28 15:30:00 [DEBUG] New state was assigned lineage "4a8a62af-48e1-9547-05ee-1256d8c3b622"
2020/01/28 15:30:00 [TRACE] GET https://54.215.219.221/v1/api?CID=lSwfA8MG5ZqT0A8WYvqq&action=list_vpcs_summary
2020/01/28 15:30:00 Couldn't find Aviatrix gateway tfg-aws-q6mvb
2020/01/28 15:30:00 [INFO] terraform: building graph: GraphTypePlanDestroy
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:30:00 [TRACE] StateTransformer: state is empty, so nothing to do
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
root - terraform.graphNodeRoot
------
2020/01/28 15:30:00 [DEBUG] Starting graph walk: walkPlanDestroy
2020/01/28 15:30:00 [TRACE] dag/walk: updating graph
2020/01/28 15:30:00 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:30:00 [TRACE] dag/walk: visiting "root"
2020/01/28 15:30:00 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:30:00 [TRACE] vertex "root": visit complete
2020/01/28 15:30:00 [INFO] terraform: building graph: GraphTypeRefresh
2020/01/28 15:30:00 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/01/28 15:30:00 [TRACE] ConfigTransformer: Starting for path: 
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:30:00 [TRACE] StateTransformer: state is empty, so nothing to do
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
root - terraform.graphNodeRoot
------
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/01/28 15:30:00 [DEBUG] Starting graph walk: walkRefresh
2020/01/28 15:30:00 [TRACE] dag/walk: updating graph
2020/01/28 15:30:00 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:30:00 [TRACE] dag/walk: visiting "root"
2020/01/28 15:30:00 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:30:00 [TRACE] vertex "root": visit complete
2020/01/28 15:30:00 [DEBUG] New state was assigned lineage "12cc0159-b5de-777a-924c-ff01a5918658"
2020/01/28 15:30:00 [INFO] terraform: building graph: GraphTypePlanDestroy
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.StateTransformer
2020/01/28 15:30:00 [TRACE] StateTransformer: state is empty, so nothing to do
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/01/28 15:30:00 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/01/28 15:30:00 [TRACE] Executing graph transform *terraform.RootTransformer
2020/01/28 15:30:00 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
root - terraform.graphNodeRoot
------
2020/01/28 15:30:00 [DEBUG] Starting graph walk: walkPlanDestroy
2020/01/28 15:30:00 [TRACE] dag/walk: updating graph
2020/01/28 15:30:00 [TRACE] dag/walk: added new vertex: "root"
2020/01/28 15:30:00 [TRACE] dag/walk: visiting "root"
2020/01/28 15:30:00 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/01/28 15:30:00 [TRACE] vertex "root": visit complete
--- PASS: TestAccAviatrixGatewayDNat_basic (162.63s)
    resource_aviatrix_gateway_dnat_test.go:74: Skipping AWS gateway destination NAT tests as SKIP_GATEWAY_DNAT_ARM is set
=== RUN   TestAccAviatrixGateway_basic
--- SKIP: TestAccAviatrixGateway_basic (0.00s)
    resource_aviatrix_gateway_test.go:117: Skipping Gateway test as SKIP_GATEWAY is set
=== RUN   TestAccAviatrixGeoVPN_basic
--- SKIP: TestAccAviatrixGeoVPN_basic (0.00s)
    resource_aviatrix_geo_vpn_test.go:21: Skipping Geo VPN test as SKIP_GEO_VPN is set
=== RUN   TestAccAviatrixSamlEndpoint_basic
--- SKIP: TestAccAviatrixSamlEndpoint_basic (0.00s)
    resource_aviatrix_saml_endpoint_test.go:36: Skipping Aviatrix SAML Endpoint test as SKIP_SAML_ENDPOINT is set
=== RUN   TestAccAviatrixS2C_basic
--- SKIP: TestAccAviatrixS2C_basic (0.00s)
    resource_aviatrix_site2cloud_test.go:22: Skipping Site2Cloud test as SKIP_S2C is set
=== RUN   TestAccAviatrixSpokeGateway_basic
--- SKIP: TestAccAviatrixSpokeGateway_basic (0.00s)
    resource_aviatrix_spoke_gateway_test.go:31: Skipping Spoke Gateway test as SKIP_SPOKE_GATEWAY is set
=== RUN   TestAccAviatrixSpokeGw_basic
--- SKIP: TestAccAviatrixSpokeGw_basic (0.00s)
    resource_aviatrix_spoke_vpc_test.go:40: Skipping Spoke Gateway test as SKIP_SPOKE is set
=== RUN   TestAccAviatrixTransPeer_basic
--- SKIP: TestAccAviatrixTransPeer_basic (0.00s)
    resource_aviatrix_trans_peer_test.go:35: Skipping aviatrix transitive peering test as SKIP_TRANS_PEER is set
=== RUN   TestAccAviatrixTransitGatewayPeering_basic
--- SKIP: TestAccAviatrixTransitGatewayPeering_basic (0.00s)
    resource_aviatrix_transit_gateway_peering_test.go:35: Skipping Aviatrix transit gateway peering test as SKIP_TRANSIT_GATEWAY_PEERING is set
=== RUN   TestAccAviatrixTransitGateway_basic
--- SKIP: TestAccAviatrixTransitGateway_basic (0.00s)
    resource_aviatrix_transit_gateway_test.go:21: Skipping Transit gateway test as SKIP_TRANSIT_GATEWAY is set
=== RUN   TestAccAviatrixTransitGw_basic
--- SKIP: TestAccAviatrixTransitGw_basic (0.00s)
    resource_aviatrix_transit_vpc_test.go:41: Skipping Transit gateway test as SKIP_TRANSIT is set
=== RUN   TestAccAviatrixTunnel_basic
--- SKIP: TestAccAviatrixTunnel_basic (0.00s)
    resource_aviatrix_tunnel_test.go:52: Skipping Aviatrix peering tunnel test as SKIP_TUNNEL is set
=== RUN   TestAccAviatrixVGWConn_basic
--- SKIP: TestAccAviatrixVGWConn_basic (0.00s)
    resource_aviatrix_vgw_conn_test.go:35: Skipping aviatrix VGW connection test as SKIP_VGW_CONN is set
=== RUN   TestAccAviatrixVpc_basic
--- SKIP: TestAccAviatrixVpc_basic (0.00s)
    resource_aviatrix_vpc_test.go:22: Skipping VPC test as SKIP_VPC is set
=== RUN   TestAccAviatrixVPNProfile_basic
--- SKIP: TestAccAviatrixVPNProfile_basic (0.00s)
    resource_aviatrix_vpn_profile_test.go:22: Skipping VPN Profile test as SKIP_VPN_PROFILE is set
=== RUN   TestAccAviatrixVPNUserAccelerator_basic
--- SKIP: TestAccAviatrixVPNUserAccelerator_basic (0.00s)
    resource_aviatrix_vpn_user_accelerator_test.go:20: SKipping VPN User Accelerator test as SKIP_VPN_USER_ACCELERATOR is set
=== RUN   TestAccAviatrixVPNUser_basic
--- SKIP: TestAccAviatrixVPNUser_basic (0.00s)
    resource_aviatrix_vpn_user_test.go:22: Skipping VPN User test as SKIP_VPN_USER is set
PASS
ok  	github.com/terraform-providers/terraform-provider-aviatrix/aviatrix	162.670s
?   	github.com/terraform-providers/terraform-provider-aviatrix/goaviatrix	[no test files]
